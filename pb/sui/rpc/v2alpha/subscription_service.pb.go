// Copyright (c) Mysten Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sui/rpc/v2alpha/subscription_service.proto

package v2alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	v2beta "suitop/pb/sui/rpc/v2beta"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for SubscriptionService.SubscribeCheckpoints
type SubscribeCheckpointsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Mask for specifiying which parts of the
	// SubscribeCheckpointsResponse should be returned.
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,1,opt,name=read_mask,json=readMask,proto3,oneof" json:"read_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeCheckpointsRequest) Reset() {
	*x = SubscribeCheckpointsRequest{}
	mi := &file_sui_rpc_v2alpha_subscription_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCheckpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCheckpointsRequest) ProtoMessage() {}

func (x *SubscribeCheckpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2alpha_subscription_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCheckpointsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCheckpointsRequest) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2alpha_subscription_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeCheckpointsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

// Response message for SubscriptionService.SubscribeCheckpoints
type SubscribeCheckpointsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The checkpoint sequence number and value of the current cursor
	// into the checkpoint stream
	Cursor *uint64 `protobuf:"varint,1,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	// The requested data for this checkpoint
	Checkpoint    *v2beta.Checkpoint `protobuf:"bytes,2,opt,name=checkpoint,proto3,oneof" json:"checkpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeCheckpointsResponse) Reset() {
	*x = SubscribeCheckpointsResponse{}
	mi := &file_sui_rpc_v2alpha_subscription_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCheckpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCheckpointsResponse) ProtoMessage() {}

func (x *SubscribeCheckpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2alpha_subscription_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCheckpointsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeCheckpointsResponse) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2alpha_subscription_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeCheckpointsResponse) GetCursor() uint64 {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return 0
}

func (x *SubscribeCheckpointsResponse) GetCheckpoint() *v2beta.Checkpoint {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

var File_sui_rpc_v2alpha_subscription_service_proto protoreflect.FileDescriptor

const file_sui_rpc_v2alpha_subscription_service_proto_rawDesc = "" +
	"\n" +
	"*sui/rpc/v2alpha/subscription_service.proto\x12\x0fsui.rpc.v2alpha\x1a google/protobuf/field_mask.proto\x1a\x1fsui/rpc/v2beta/checkpoint.proto\"i\n" +
	"\x1bSubscribeCheckpointsRequest\x12<\n" +
	"\tread_mask\x18\x01 \x01(\v2\x1a.google.protobuf.FieldMaskH\x00R\breadMask\x88\x01\x01B\f\n" +
	"\n" +
	"_read_mask\"\x96\x01\n" +
	"\x1cSubscribeCheckpointsResponse\x12\x1b\n" +
	"\x06cursor\x18\x01 \x01(\x04H\x00R\x06cursor\x88\x01\x01\x12?\n" +
	"\n" +
	"checkpoint\x18\x02 \x01(\v2\x1a.sui.rpc.v2beta.CheckpointH\x01R\n" +
	"checkpoint\x88\x01\x01B\t\n" +
	"\a_cursorB\r\n" +
	"\v_checkpoint2\x8c\x01\n" +
	"\x13SubscriptionService\x12u\n" +
	"\x14SubscribeCheckpoints\x12,.sui.rpc.v2alpha.SubscribeCheckpointsRequest\x1a-.sui.rpc.v2alpha.SubscribeCheckpointsResponse0\x01B\x11Z\x0fsui/rpc/v2alphab\x06proto3"

var (
	file_sui_rpc_v2alpha_subscription_service_proto_rawDescOnce sync.Once
	file_sui_rpc_v2alpha_subscription_service_proto_rawDescData []byte
)

func file_sui_rpc_v2alpha_subscription_service_proto_rawDescGZIP() []byte {
	file_sui_rpc_v2alpha_subscription_service_proto_rawDescOnce.Do(func() {
		file_sui_rpc_v2alpha_subscription_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sui_rpc_v2alpha_subscription_service_proto_rawDesc), len(file_sui_rpc_v2alpha_subscription_service_proto_rawDesc)))
	})
	return file_sui_rpc_v2alpha_subscription_service_proto_rawDescData
}

var file_sui_rpc_v2alpha_subscription_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sui_rpc_v2alpha_subscription_service_proto_goTypes = []any{
	(*SubscribeCheckpointsRequest)(nil),  // 0: sui.rpc.v2alpha.SubscribeCheckpointsRequest
	(*SubscribeCheckpointsResponse)(nil), // 1: sui.rpc.v2alpha.SubscribeCheckpointsResponse
	(*fieldmaskpb.FieldMask)(nil),        // 2: google.protobuf.FieldMask
	(*v2beta.Checkpoint)(nil),            // 3: sui.rpc.v2beta.Checkpoint
}
var file_sui_rpc_v2alpha_subscription_service_proto_depIdxs = []int32{
	2, // 0: sui.rpc.v2alpha.SubscribeCheckpointsRequest.read_mask:type_name -> google.protobuf.FieldMask
	3, // 1: sui.rpc.v2alpha.SubscribeCheckpointsResponse.checkpoint:type_name -> sui.rpc.v2beta.Checkpoint
	0, // 2: sui.rpc.v2alpha.SubscriptionService.SubscribeCheckpoints:input_type -> sui.rpc.v2alpha.SubscribeCheckpointsRequest
	1, // 3: sui.rpc.v2alpha.SubscriptionService.SubscribeCheckpoints:output_type -> sui.rpc.v2alpha.SubscribeCheckpointsResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sui_rpc_v2alpha_subscription_service_proto_init() }
func file_sui_rpc_v2alpha_subscription_service_proto_init() {
	if File_sui_rpc_v2alpha_subscription_service_proto != nil {
		return
	}
	file_sui_rpc_v2alpha_subscription_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_sui_rpc_v2alpha_subscription_service_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sui_rpc_v2alpha_subscription_service_proto_rawDesc), len(file_sui_rpc_v2alpha_subscription_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sui_rpc_v2alpha_subscription_service_proto_goTypes,
		DependencyIndexes: file_sui_rpc_v2alpha_subscription_service_proto_depIdxs,
		MessageInfos:      file_sui_rpc_v2alpha_subscription_service_proto_msgTypes,
	}.Build()
	File_sui_rpc_v2alpha_subscription_service_proto = out.File
	file_sui_rpc_v2alpha_subscription_service_proto_goTypes = nil
	file_sui_rpc_v2alpha_subscription_service_proto_depIdxs = nil
}
