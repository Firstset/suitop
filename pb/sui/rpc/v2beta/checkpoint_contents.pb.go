// Copyright (c) Mysten Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sui/rpc/v2beta/checkpoint_contents.proto

package v2beta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The committed to contents of a checkpoint.
type CheckpointContents struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This CheckpointContents serialized as BCS.
	Bcs *Bcs `protobuf:"bytes,1,opt,name=bcs,proto3,oneof" json:"bcs,omitempty"`
	// The digest of this CheckpointContents.
	Digest *string `protobuf:"bytes,2,opt,name=digest,proto3,oneof" json:"digest,omitempty"`
	// Version of this CheckpointContents
	Version *int32 `protobuf:"varint,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	// Set of transactions committed to in this checkpoint.
	Transactions  []*CheckpointedTransactionInfo `protobuf:"bytes,4,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointContents) Reset() {
	*x = CheckpointContents{}
	mi := &file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointContents) ProtoMessage() {}

func (x *CheckpointContents) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointContents.ProtoReflect.Descriptor instead.
func (*CheckpointContents) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescGZIP(), []int{0}
}

func (x *CheckpointContents) GetBcs() *Bcs {
	if x != nil {
		return x.Bcs
	}
	return nil
}

func (x *CheckpointContents) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *CheckpointContents) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CheckpointContents) GetTransactions() []*CheckpointedTransactionInfo {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// Transaction information committed to in a checkpoint.
type CheckpointedTransactionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Digest of the transaction.
	Transaction *string `protobuf:"bytes,1,opt,name=transaction,proto3,oneof" json:"transaction,omitempty"`
	// Digest of the effects.
	Effects *string `protobuf:"bytes,2,opt,name=effects,proto3,oneof" json:"effects,omitempty"`
	// Set of user signatures that authorized the transaction.
	Signatures    []*UserSignature `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckpointedTransactionInfo) Reset() {
	*x = CheckpointedTransactionInfo{}
	mi := &file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckpointedTransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointedTransactionInfo) ProtoMessage() {}

func (x *CheckpointedTransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointedTransactionInfo.ProtoReflect.Descriptor instead.
func (*CheckpointedTransactionInfo) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescGZIP(), []int{1}
}

func (x *CheckpointedTransactionInfo) GetTransaction() string {
	if x != nil && x.Transaction != nil {
		return *x.Transaction
	}
	return ""
}

func (x *CheckpointedTransactionInfo) GetEffects() string {
	if x != nil && x.Effects != nil {
		return *x.Effects
	}
	return ""
}

func (x *CheckpointedTransactionInfo) GetSignatures() []*UserSignature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

var File_sui_rpc_v2beta_checkpoint_contents_proto protoreflect.FileDescriptor

const file_sui_rpc_v2beta_checkpoint_contents_proto_rawDesc = "" +
	"\n" +
	"(sui/rpc/v2beta/checkpoint_contents.proto\x12\x0esui.rpc.v2beta\x1a\x18sui/rpc/v2beta/bcs.proto\x1a\x1esui/rpc/v2beta/signature.proto\"\xec\x01\n" +
	"\x12CheckpointContents\x12*\n" +
	"\x03bcs\x18\x01 \x01(\v2\x13.sui.rpc.v2beta.BcsH\x00R\x03bcs\x88\x01\x01\x12\x1b\n" +
	"\x06digest\x18\x02 \x01(\tH\x01R\x06digest\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x03 \x01(\x05H\x02R\aversion\x88\x01\x01\x12O\n" +
	"\ftransactions\x18\x04 \x03(\v2+.sui.rpc.v2beta.CheckpointedTransactionInfoR\ftransactionsB\x06\n" +
	"\x04_bcsB\t\n" +
	"\a_digestB\n" +
	"\n" +
	"\b_version\"\xbe\x01\n" +
	"\x1bCheckpointedTransactionInfo\x12%\n" +
	"\vtransaction\x18\x01 \x01(\tH\x00R\vtransaction\x88\x01\x01\x12\x1d\n" +
	"\aeffects\x18\x02 \x01(\tH\x01R\aeffects\x88\x01\x01\x12=\n" +
	"\n" +
	"signatures\x18\x03 \x03(\v2\x1d.sui.rpc.v2beta.UserSignatureR\n" +
	"signaturesB\x0e\n" +
	"\f_transactionB\n" +
	"\n" +
	"\b_effectsB\x10Z\x0esui/rpc/v2betab\x06proto3"

var (
	file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescOnce sync.Once
	file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescData []byte
)

func file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescGZIP() []byte {
	file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescOnce.Do(func() {
		file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sui_rpc_v2beta_checkpoint_contents_proto_rawDesc), len(file_sui_rpc_v2beta_checkpoint_contents_proto_rawDesc)))
	})
	return file_sui_rpc_v2beta_checkpoint_contents_proto_rawDescData
}

var file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sui_rpc_v2beta_checkpoint_contents_proto_goTypes = []any{
	(*CheckpointContents)(nil),          // 0: sui.rpc.v2beta.CheckpointContents
	(*CheckpointedTransactionInfo)(nil), // 1: sui.rpc.v2beta.CheckpointedTransactionInfo
	(*Bcs)(nil),                         // 2: sui.rpc.v2beta.Bcs
	(*UserSignature)(nil),               // 3: sui.rpc.v2beta.UserSignature
}
var file_sui_rpc_v2beta_checkpoint_contents_proto_depIdxs = []int32{
	2, // 0: sui.rpc.v2beta.CheckpointContents.bcs:type_name -> sui.rpc.v2beta.Bcs
	1, // 1: sui.rpc.v2beta.CheckpointContents.transactions:type_name -> sui.rpc.v2beta.CheckpointedTransactionInfo
	3, // 2: sui.rpc.v2beta.CheckpointedTransactionInfo.signatures:type_name -> sui.rpc.v2beta.UserSignature
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_sui_rpc_v2beta_checkpoint_contents_proto_init() }
func file_sui_rpc_v2beta_checkpoint_contents_proto_init() {
	if File_sui_rpc_v2beta_checkpoint_contents_proto != nil {
		return
	}
	file_sui_rpc_v2beta_bcs_proto_init()
	file_sui_rpc_v2beta_signature_proto_init()
	file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes[0].OneofWrappers = []any{}
	file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sui_rpc_v2beta_checkpoint_contents_proto_rawDesc), len(file_sui_rpc_v2beta_checkpoint_contents_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sui_rpc_v2beta_checkpoint_contents_proto_goTypes,
		DependencyIndexes: file_sui_rpc_v2beta_checkpoint_contents_proto_depIdxs,
		MessageInfos:      file_sui_rpc_v2beta_checkpoint_contents_proto_msgTypes,
	}.Build()
	File_sui_rpc_v2beta_checkpoint_contents_proto = out.File
	file_sui_rpc_v2beta_checkpoint_contents_proto_goTypes = nil
	file_sui_rpc_v2beta_checkpoint_contents_proto_depIdxs = nil
}
