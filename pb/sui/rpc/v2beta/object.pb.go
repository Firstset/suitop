// Copyright (c) Mysten Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sui/rpc/v2beta/object.proto

package v2beta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An object on the Sui blockchain.
type Object struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This Object serialized as BCS.
	Bcs *Bcs `protobuf:"bytes,1,opt,name=bcs,proto3,oneof" json:"bcs,omitempty"`
	// `ObjectId` for this object.
	ObjectId *string `protobuf:"bytes,2,opt,name=object_id,json=objectId,proto3,oneof" json:"object_id,omitempty"`
	// Version of the object.
	Version *uint64 `protobuf:"varint,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	// The digest of this Object.
	Digest *string `protobuf:"bytes,4,opt,name=digest,proto3,oneof" json:"digest,omitempty"`
	// Owner of the object.
	Owner *Owner `protobuf:"bytes,5,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	// The type of this object.
	//
	// This will be 'package' for packages and a StructTag for move structs.
	ObjectType *string `protobuf:"bytes,6,opt,name=object_type,json=objectType,proto3,oneof" json:"object_type,omitempty"`
	// DEPRECATED this field is no longer used to determine whether a tx can transfer this
	// object. Instead, it is always calculated from the objects type when loaded in execution.
	//
	// Only set for Move structs
	HasPublicTransfer *bool `protobuf:"varint,7,opt,name=has_public_transfer,json=hasPublicTransfer,proto3,oneof" json:"has_public_transfer,omitempty"`
	// BCS bytes of a Move struct value.
	//
	// Only set for Move structs
	Contents *Bcs `protobuf:"bytes,8,opt,name=contents,proto3,oneof" json:"contents,omitempty"`
	// Set of modules defined by this package.
	//
	// Only set for Packages
	Modules []*MoveModule `protobuf:"bytes,9,rep,name=modules,proto3" json:"modules,omitempty"`
	// Maps struct/module to a package version where it was first defined, stored as a vector for
	// simple serialization and deserialization.
	//
	// Only set for Packages
	TypeOriginTable []*TypeOrigin `protobuf:"bytes,10,rep,name=type_origin_table,json=typeOriginTable,proto3" json:"type_origin_table,omitempty"`
	// For each dependency, maps original package ID to the info about the (upgraded) dependency
	// version that this package is using.
	//
	// Only set for Packages
	LinkageTable []*UpgradeInfo `protobuf:"bytes,11,rep,name=linkage_table,json=linkageTable,proto3" json:"linkage_table,omitempty"`
	// The digest of the transaction that created or last mutated this object
	PreviousTransaction *string `protobuf:"bytes,12,opt,name=previous_transaction,json=previousTransaction,proto3,oneof" json:"previous_transaction,omitempty"`
	// The amount of SUI to rebate if this object gets deleted.
	// This number is re-calculated each time the object is mutated based on
	// the present storage gas price.
	StorageRebate *uint64 `protobuf:"varint,13,opt,name=storage_rebate,json=storageRebate,proto3,oneof" json:"storage_rebate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Object) Reset() {
	*x = Object{}
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_object_proto_rawDescGZIP(), []int{0}
}

func (x *Object) GetBcs() *Bcs {
	if x != nil {
		return x.Bcs
	}
	return nil
}

func (x *Object) GetObjectId() string {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return ""
}

func (x *Object) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Object) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *Object) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Object) GetObjectType() string {
	if x != nil && x.ObjectType != nil {
		return *x.ObjectType
	}
	return ""
}

func (x *Object) GetHasPublicTransfer() bool {
	if x != nil && x.HasPublicTransfer != nil {
		return *x.HasPublicTransfer
	}
	return false
}

func (x *Object) GetContents() *Bcs {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *Object) GetModules() []*MoveModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Object) GetTypeOriginTable() []*TypeOrigin {
	if x != nil {
		return x.TypeOriginTable
	}
	return nil
}

func (x *Object) GetLinkageTable() []*UpgradeInfo {
	if x != nil {
		return x.LinkageTable
	}
	return nil
}

func (x *Object) GetPreviousTransaction() string {
	if x != nil && x.PreviousTransaction != nil {
		return *x.PreviousTransaction
	}
	return ""
}

func (x *Object) GetStorageRebate() uint64 {
	if x != nil && x.StorageRebate != nil {
		return *x.StorageRebate
	}
	return 0
}

// Module defined by a package.
type MoveModule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the module.
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Serialized bytecode of the module.
	Contents      []byte `protobuf:"bytes,2,opt,name=contents,proto3,oneof" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveModule) Reset() {
	*x = MoveModule{}
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveModule) ProtoMessage() {}

func (x *MoveModule) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveModule.ProtoReflect.Descriptor instead.
func (*MoveModule) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_object_proto_rawDescGZIP(), []int{1}
}

func (x *MoveModule) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MoveModule) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

// Identifies a struct and the module it was defined in.
type TypeOrigin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModuleName    *string                `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3,oneof" json:"module_name,omitempty"`
	StructName    *string                `protobuf:"bytes,2,opt,name=struct_name,json=structName,proto3,oneof" json:"struct_name,omitempty"`
	PackageId     *string                `protobuf:"bytes,3,opt,name=package_id,json=packageId,proto3,oneof" json:"package_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypeOrigin) Reset() {
	*x = TypeOrigin{}
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypeOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeOrigin) ProtoMessage() {}

func (x *TypeOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeOrigin.ProtoReflect.Descriptor instead.
func (*TypeOrigin) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_object_proto_rawDescGZIP(), []int{2}
}

func (x *TypeOrigin) GetModuleName() string {
	if x != nil && x.ModuleName != nil {
		return *x.ModuleName
	}
	return ""
}

func (x *TypeOrigin) GetStructName() string {
	if x != nil && x.StructName != nil {
		return *x.StructName
	}
	return ""
}

func (x *TypeOrigin) GetPackageId() string {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return ""
}

// / Upgraded package info for the linkage table.
type UpgradeInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the original package.
	OriginalId *string `protobuf:"bytes,1,opt,name=original_id,json=originalId,proto3,oneof" json:"original_id,omitempty"`
	// ID of the upgraded package.
	UpgradedId *string `protobuf:"bytes,2,opt,name=upgraded_id,json=upgradedId,proto3,oneof" json:"upgraded_id,omitempty"`
	// Version of the upgraded package.
	UpgradedVersion *uint64 `protobuf:"varint,3,opt,name=upgraded_version,json=upgradedVersion,proto3,oneof" json:"upgraded_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpgradeInfo) Reset() {
	*x = UpgradeInfo{}
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeInfo) ProtoMessage() {}

func (x *UpgradeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_object_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeInfo.ProtoReflect.Descriptor instead.
func (*UpgradeInfo) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_object_proto_rawDescGZIP(), []int{3}
}

func (x *UpgradeInfo) GetOriginalId() string {
	if x != nil && x.OriginalId != nil {
		return *x.OriginalId
	}
	return ""
}

func (x *UpgradeInfo) GetUpgradedId() string {
	if x != nil && x.UpgradedId != nil {
		return *x.UpgradedId
	}
	return ""
}

func (x *UpgradeInfo) GetUpgradedVersion() uint64 {
	if x != nil && x.UpgradedVersion != nil {
		return *x.UpgradedVersion
	}
	return 0
}

var File_sui_rpc_v2beta_object_proto protoreflect.FileDescriptor

const file_sui_rpc_v2beta_object_proto_rawDesc = "" +
	"\n" +
	"\x1bsui/rpc/v2beta/object.proto\x12\x0esui.rpc.v2beta\x1a\x18sui/rpc/v2beta/bcs.proto\x1a\x1asui/rpc/v2beta/owner.proto\"\x91\x06\n" +
	"\x06Object\x12*\n" +
	"\x03bcs\x18\x01 \x01(\v2\x13.sui.rpc.v2beta.BcsH\x00R\x03bcs\x88\x01\x01\x12 \n" +
	"\tobject_id\x18\x02 \x01(\tH\x01R\bobjectId\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x03 \x01(\x04H\x02R\aversion\x88\x01\x01\x12\x1b\n" +
	"\x06digest\x18\x04 \x01(\tH\x03R\x06digest\x88\x01\x01\x120\n" +
	"\x05owner\x18\x05 \x01(\v2\x15.sui.rpc.v2beta.OwnerH\x04R\x05owner\x88\x01\x01\x12$\n" +
	"\vobject_type\x18\x06 \x01(\tH\x05R\n" +
	"objectType\x88\x01\x01\x123\n" +
	"\x13has_public_transfer\x18\a \x01(\bH\x06R\x11hasPublicTransfer\x88\x01\x01\x124\n" +
	"\bcontents\x18\b \x01(\v2\x13.sui.rpc.v2beta.BcsH\aR\bcontents\x88\x01\x01\x124\n" +
	"\amodules\x18\t \x03(\v2\x1a.sui.rpc.v2beta.MoveModuleR\amodules\x12F\n" +
	"\x11type_origin_table\x18\n" +
	" \x03(\v2\x1a.sui.rpc.v2beta.TypeOriginR\x0ftypeOriginTable\x12@\n" +
	"\rlinkage_table\x18\v \x03(\v2\x1b.sui.rpc.v2beta.UpgradeInfoR\flinkageTable\x126\n" +
	"\x14previous_transaction\x18\f \x01(\tH\bR\x13previousTransaction\x88\x01\x01\x12*\n" +
	"\x0estorage_rebate\x18\r \x01(\x04H\tR\rstorageRebate\x88\x01\x01B\x06\n" +
	"\x04_bcsB\f\n" +
	"\n" +
	"_object_idB\n" +
	"\n" +
	"\b_versionB\t\n" +
	"\a_digestB\b\n" +
	"\x06_ownerB\x0e\n" +
	"\f_object_typeB\x16\n" +
	"\x14_has_public_transferB\v\n" +
	"\t_contentsB\x17\n" +
	"\x15_previous_transactionB\x11\n" +
	"\x0f_storage_rebate\"\\\n" +
	"\n" +
	"MoveModule\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1f\n" +
	"\bcontents\x18\x02 \x01(\fH\x01R\bcontents\x88\x01\x01B\a\n" +
	"\x05_nameB\v\n" +
	"\t_contents\"\xab\x01\n" +
	"\n" +
	"TypeOrigin\x12$\n" +
	"\vmodule_name\x18\x01 \x01(\tH\x00R\n" +
	"moduleName\x88\x01\x01\x12$\n" +
	"\vstruct_name\x18\x02 \x01(\tH\x01R\n" +
	"structName\x88\x01\x01\x12\"\n" +
	"\n" +
	"package_id\x18\x03 \x01(\tH\x02R\tpackageId\x88\x01\x01B\x0e\n" +
	"\f_module_nameB\x0e\n" +
	"\f_struct_nameB\r\n" +
	"\v_package_id\"\xbe\x01\n" +
	"\vUpgradeInfo\x12$\n" +
	"\voriginal_id\x18\x01 \x01(\tH\x00R\n" +
	"originalId\x88\x01\x01\x12$\n" +
	"\vupgraded_id\x18\x02 \x01(\tH\x01R\n" +
	"upgradedId\x88\x01\x01\x12.\n" +
	"\x10upgraded_version\x18\x03 \x01(\x04H\x02R\x0fupgradedVersion\x88\x01\x01B\x0e\n" +
	"\f_original_idB\x0e\n" +
	"\f_upgraded_idB\x13\n" +
	"\x11_upgraded_versionB\x10Z\x0esui/rpc/v2betab\x06proto3"

var (
	file_sui_rpc_v2beta_object_proto_rawDescOnce sync.Once
	file_sui_rpc_v2beta_object_proto_rawDescData []byte
)

func file_sui_rpc_v2beta_object_proto_rawDescGZIP() []byte {
	file_sui_rpc_v2beta_object_proto_rawDescOnce.Do(func() {
		file_sui_rpc_v2beta_object_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sui_rpc_v2beta_object_proto_rawDesc), len(file_sui_rpc_v2beta_object_proto_rawDesc)))
	})
	return file_sui_rpc_v2beta_object_proto_rawDescData
}

var file_sui_rpc_v2beta_object_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sui_rpc_v2beta_object_proto_goTypes = []any{
	(*Object)(nil),      // 0: sui.rpc.v2beta.Object
	(*MoveModule)(nil),  // 1: sui.rpc.v2beta.MoveModule
	(*TypeOrigin)(nil),  // 2: sui.rpc.v2beta.TypeOrigin
	(*UpgradeInfo)(nil), // 3: sui.rpc.v2beta.UpgradeInfo
	(*Bcs)(nil),         // 4: sui.rpc.v2beta.Bcs
	(*Owner)(nil),       // 5: sui.rpc.v2beta.Owner
}
var file_sui_rpc_v2beta_object_proto_depIdxs = []int32{
	4, // 0: sui.rpc.v2beta.Object.bcs:type_name -> sui.rpc.v2beta.Bcs
	5, // 1: sui.rpc.v2beta.Object.owner:type_name -> sui.rpc.v2beta.Owner
	4, // 2: sui.rpc.v2beta.Object.contents:type_name -> sui.rpc.v2beta.Bcs
	1, // 3: sui.rpc.v2beta.Object.modules:type_name -> sui.rpc.v2beta.MoveModule
	2, // 4: sui.rpc.v2beta.Object.type_origin_table:type_name -> sui.rpc.v2beta.TypeOrigin
	3, // 5: sui.rpc.v2beta.Object.linkage_table:type_name -> sui.rpc.v2beta.UpgradeInfo
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_sui_rpc_v2beta_object_proto_init() }
func file_sui_rpc_v2beta_object_proto_init() {
	if File_sui_rpc_v2beta_object_proto != nil {
		return
	}
	file_sui_rpc_v2beta_bcs_proto_init()
	file_sui_rpc_v2beta_owner_proto_init()
	file_sui_rpc_v2beta_object_proto_msgTypes[0].OneofWrappers = []any{}
	file_sui_rpc_v2beta_object_proto_msgTypes[1].OneofWrappers = []any{}
	file_sui_rpc_v2beta_object_proto_msgTypes[2].OneofWrappers = []any{}
	file_sui_rpc_v2beta_object_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sui_rpc_v2beta_object_proto_rawDesc), len(file_sui_rpc_v2beta_object_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sui_rpc_v2beta_object_proto_goTypes,
		DependencyIndexes: file_sui_rpc_v2beta_object_proto_depIdxs,
		MessageInfos:      file_sui_rpc_v2beta_object_proto_msgTypes,
	}.Build()
	File_sui_rpc_v2beta_object_proto = out.File
	file_sui_rpc_v2beta_object_proto_goTypes = nil
	file_sui_rpc_v2beta_object_proto_depIdxs = nil
}
