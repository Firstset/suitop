// Copyright (c) Mysten Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sui/rpc/v2beta/transaction.proto

package v2beta

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionExpiration_TransactionExpirationKind int32

const (
	TransactionExpiration_TRANSACTION_EXPIRATION_KIND_UNKNOWN TransactionExpiration_TransactionExpirationKind = 0
	// The transaction has no expiration.
	TransactionExpiration_NONE TransactionExpiration_TransactionExpirationKind = 1
	// Validators won't sign and execute transaction unless the expiration epoch
	// is greater than or equal to the current epoch.
	TransactionExpiration_EPOCH TransactionExpiration_TransactionExpirationKind = 2
)

// Enum value maps for TransactionExpiration_TransactionExpirationKind.
var (
	TransactionExpiration_TransactionExpirationKind_name = map[int32]string{
		0: "TRANSACTION_EXPIRATION_KIND_UNKNOWN",
		1: "NONE",
		2: "EPOCH",
	}
	TransactionExpiration_TransactionExpirationKind_value = map[string]int32{
		"TRANSACTION_EXPIRATION_KIND_UNKNOWN": 0,
		"NONE":                                1,
		"EPOCH":                               2,
	}
)

func (x TransactionExpiration_TransactionExpirationKind) Enum() *TransactionExpiration_TransactionExpirationKind {
	p := new(TransactionExpiration_TransactionExpirationKind)
	*p = x
	return p
}

func (x TransactionExpiration_TransactionExpirationKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionExpiration_TransactionExpirationKind) Descriptor() protoreflect.EnumDescriptor {
	return file_sui_rpc_v2beta_transaction_proto_enumTypes[0].Descriptor()
}

func (TransactionExpiration_TransactionExpirationKind) Type() protoreflect.EnumType {
	return &file_sui_rpc_v2beta_transaction_proto_enumTypes[0]
}

func (x TransactionExpiration_TransactionExpirationKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionExpiration_TransactionExpirationKind.Descriptor instead.
func (TransactionExpiration_TransactionExpirationKind) EnumDescriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{2, 0}
}

type ExecutionTimeObservation_ExecutionTimeObservationKind int32

const (
	ExecutionTimeObservation_EXECUTION_TIME_OBSERVATION_KIND_UNKNOWN ExecutionTimeObservation_ExecutionTimeObservationKind = 0
	ExecutionTimeObservation_MOVE_ENTRY_POINT                        ExecutionTimeObservation_ExecutionTimeObservationKind = 1
	ExecutionTimeObservation_TRANSFER_OBJECTS                        ExecutionTimeObservation_ExecutionTimeObservationKind = 2
	ExecutionTimeObservation_SPLIT_COINS                             ExecutionTimeObservation_ExecutionTimeObservationKind = 3
	ExecutionTimeObservation_MERGE_COINS                             ExecutionTimeObservation_ExecutionTimeObservationKind = 4
	ExecutionTimeObservation_PUBLISH                                 ExecutionTimeObservation_ExecutionTimeObservationKind = 5
	ExecutionTimeObservation_MAKE_MOVE_VECTOR                        ExecutionTimeObservation_ExecutionTimeObservationKind = 6
	ExecutionTimeObservation_UPGRADE                                 ExecutionTimeObservation_ExecutionTimeObservationKind = 7
)

// Enum value maps for ExecutionTimeObservation_ExecutionTimeObservationKind.
var (
	ExecutionTimeObservation_ExecutionTimeObservationKind_name = map[int32]string{
		0: "EXECUTION_TIME_OBSERVATION_KIND_UNKNOWN",
		1: "MOVE_ENTRY_POINT",
		2: "TRANSFER_OBJECTS",
		3: "SPLIT_COINS",
		4: "MERGE_COINS",
		5: "PUBLISH",
		6: "MAKE_MOVE_VECTOR",
		7: "UPGRADE",
	}
	ExecutionTimeObservation_ExecutionTimeObservationKind_value = map[string]int32{
		"EXECUTION_TIME_OBSERVATION_KIND_UNKNOWN": 0,
		"MOVE_ENTRY_POINT":                        1,
		"TRANSFER_OBJECTS":                        2,
		"SPLIT_COINS":                             3,
		"MERGE_COINS":                             4,
		"PUBLISH":                                 5,
		"MAKE_MOVE_VECTOR":                        6,
		"UPGRADE":                                 7,
	}
)

func (x ExecutionTimeObservation_ExecutionTimeObservationKind) Enum() *ExecutionTimeObservation_ExecutionTimeObservationKind {
	p := new(ExecutionTimeObservation_ExecutionTimeObservationKind)
	*p = x
	return p
}

func (x ExecutionTimeObservation_ExecutionTimeObservationKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionTimeObservation_ExecutionTimeObservationKind) Descriptor() protoreflect.EnumDescriptor {
	return file_sui_rpc_v2beta_transaction_proto_enumTypes[1].Descriptor()
}

func (ExecutionTimeObservation_ExecutionTimeObservationKind) Type() protoreflect.EnumType {
	return &file_sui_rpc_v2beta_transaction_proto_enumTypes[1]
}

func (x ExecutionTimeObservation_ExecutionTimeObservationKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionTimeObservation_ExecutionTimeObservationKind.Descriptor instead.
func (ExecutionTimeObservation_ExecutionTimeObservationKind) EnumDescriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{30, 0}
}

// A transaction.
type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This Transaction serialized as BCS.
	Bcs *Bcs `protobuf:"bytes,1,opt,name=bcs,proto3,oneof" json:"bcs,omitempty"`
	// The digest of this Transaction.
	Digest *string `protobuf:"bytes,2,opt,name=digest,proto3,oneof" json:"digest,omitempty"`
	// Version of this Transaction.
	Version       *int32                 `protobuf:"varint,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Kind          *TransactionKind       `protobuf:"bytes,4,opt,name=kind,proto3,oneof" json:"kind,omitempty"`
	Sender        *string                `protobuf:"bytes,5,opt,name=sender,proto3,oneof" json:"sender,omitempty"`
	GasPayment    *GasPayment            `protobuf:"bytes,6,opt,name=gas_payment,json=gasPayment,proto3,oneof" json:"gas_payment,omitempty"`
	Expiration    *TransactionExpiration `protobuf:"bytes,7,opt,name=expiration,proto3,oneof" json:"expiration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetBcs() *Bcs {
	if x != nil {
		return x.Bcs
	}
	return nil
}

func (x *Transaction) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *Transaction) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Transaction) GetKind() *TransactionKind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Transaction) GetSender() string {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return ""
}

func (x *Transaction) GetGasPayment() *GasPayment {
	if x != nil {
		return x.GasPayment
	}
	return nil
}

func (x *Transaction) GetExpiration() *TransactionExpiration {
	if x != nil {
		return x.Expiration
	}
	return nil
}

// Payment information for executing a transaction.
type GasPayment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Set of gas objects to use for payment.
	Objects []*ObjectReference `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	// Owner of the gas objects, either the transaction sender or a sponsor.
	Owner *string `protobuf:"bytes,2,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	// Gas unit price to use when charging for computation.
	//
	// Must be greater than or equal to the network's current RGP (reference gas price).
	Price *uint64 `protobuf:"varint,3,opt,name=price,proto3,oneof" json:"price,omitempty"`
	// Total budget willing to spend for the execution of a transaction.
	Budget        *uint64 `protobuf:"varint,4,opt,name=budget,proto3,oneof" json:"budget,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GasPayment) Reset() {
	*x = GasPayment{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GasPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPayment) ProtoMessage() {}

func (x *GasPayment) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPayment.ProtoReflect.Descriptor instead.
func (*GasPayment) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *GasPayment) GetObjects() []*ObjectReference {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *GasPayment) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *GasPayment) GetPrice() uint64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *GasPayment) GetBudget() uint64 {
	if x != nil && x.Budget != nil {
		return *x.Budget
	}
	return 0
}

// A TTL for a transaction.
type TransactionExpiration struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Kind          *TransactionExpiration_TransactionExpirationKind `protobuf:"varint,1,opt,name=kind,proto3,enum=sui.rpc.v2beta.TransactionExpiration_TransactionExpirationKind,oneof" json:"kind,omitempty"`
	Epoch         *uint64                                          `protobuf:"varint,2,opt,name=epoch,proto3,oneof" json:"epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionExpiration) Reset() {
	*x = TransactionExpiration{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionExpiration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionExpiration) ProtoMessage() {}

func (x *TransactionExpiration) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionExpiration.ProtoReflect.Descriptor instead.
func (*TransactionExpiration) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionExpiration) GetKind() TransactionExpiration_TransactionExpirationKind {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return TransactionExpiration_TRANSACTION_EXPIRATION_KIND_UNKNOWN
}

func (x *TransactionExpiration) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

// Transaction type.
type TransactionKind struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*TransactionKind_ProgrammableTransaction
	//	*TransactionKind_ChangeEpoch
	//	*TransactionKind_Genesis
	//	*TransactionKind_ConsensusCommitPrologueV1
	//	*TransactionKind_AuthenticatorStateUpdate
	//	*TransactionKind_EndOfEpoch
	//	*TransactionKind_RandomnessStateUpdate
	//	*TransactionKind_ConsensusCommitPrologueV2
	//	*TransactionKind_ConsensusCommitPrologueV3
	//	*TransactionKind_ConsensusCommitPrologueV4
	Kind          isTransactionKind_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionKind) Reset() {
	*x = TransactionKind{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionKind) ProtoMessage() {}

func (x *TransactionKind) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionKind.ProtoReflect.Descriptor instead.
func (*TransactionKind) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionKind) GetKind() isTransactionKind_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *TransactionKind) GetProgrammableTransaction() *ProgrammableTransaction {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_ProgrammableTransaction); ok {
			return x.ProgrammableTransaction
		}
	}
	return nil
}

func (x *TransactionKind) GetChangeEpoch() *ChangeEpoch {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_ChangeEpoch); ok {
			return x.ChangeEpoch
		}
	}
	return nil
}

func (x *TransactionKind) GetGenesis() *GenesisTransaction {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_Genesis); ok {
			return x.Genesis
		}
	}
	return nil
}

func (x *TransactionKind) GetConsensusCommitPrologueV1() *ConsensusCommitPrologue {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_ConsensusCommitPrologueV1); ok {
			return x.ConsensusCommitPrologueV1
		}
	}
	return nil
}

func (x *TransactionKind) GetAuthenticatorStateUpdate() *AuthenticatorStateUpdate {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_AuthenticatorStateUpdate); ok {
			return x.AuthenticatorStateUpdate
		}
	}
	return nil
}

func (x *TransactionKind) GetEndOfEpoch() *EndOfEpochTransaction {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_EndOfEpoch); ok {
			return x.EndOfEpoch
		}
	}
	return nil
}

func (x *TransactionKind) GetRandomnessStateUpdate() *RandomnessStateUpdate {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_RandomnessStateUpdate); ok {
			return x.RandomnessStateUpdate
		}
	}
	return nil
}

func (x *TransactionKind) GetConsensusCommitPrologueV2() *ConsensusCommitPrologue {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_ConsensusCommitPrologueV2); ok {
			return x.ConsensusCommitPrologueV2
		}
	}
	return nil
}

func (x *TransactionKind) GetConsensusCommitPrologueV3() *ConsensusCommitPrologue {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_ConsensusCommitPrologueV3); ok {
			return x.ConsensusCommitPrologueV3
		}
	}
	return nil
}

func (x *TransactionKind) GetConsensusCommitPrologueV4() *ConsensusCommitPrologue {
	if x != nil {
		if x, ok := x.Kind.(*TransactionKind_ConsensusCommitPrologueV4); ok {
			return x.ConsensusCommitPrologueV4
		}
	}
	return nil
}

type isTransactionKind_Kind interface {
	isTransactionKind_Kind()
}

type TransactionKind_ProgrammableTransaction struct {
	// A user transaction comprised of a list of native commands and Move calls.
	ProgrammableTransaction *ProgrammableTransaction `protobuf:"bytes,2,opt,name=programmable_transaction,json=programmableTransaction,proto3,oneof"`
}

type TransactionKind_ChangeEpoch struct {
	// System transaction used to end an epoch.
	//
	// The `ChangeEpoch` variant is now deprecated (but the `ChangeEpoch` struct is still used by
	// `EndOfEpochTransaction`).
	ChangeEpoch *ChangeEpoch `protobuf:"bytes,100,opt,name=change_epoch,json=changeEpoch,proto3,oneof"`
}

type TransactionKind_Genesis struct {
	// Transaction used to initialize the chain state.
	//
	// Only valid if in the genesis checkpoint (0) and if this is the very first transaction ever
	// executed on the chain.
	Genesis *GenesisTransaction `protobuf:"bytes,101,opt,name=genesis,proto3,oneof"`
}

type TransactionKind_ConsensusCommitPrologueV1 struct {
	// V1 consensus commit update.
	ConsensusCommitPrologueV1 *ConsensusCommitPrologue `protobuf:"bytes,102,opt,name=consensus_commit_prologue_v1,json=consensusCommitPrologueV1,proto3,oneof"`
}

type TransactionKind_AuthenticatorStateUpdate struct {
	// Update set of valid JWKs used for zklogin.
	AuthenticatorStateUpdate *AuthenticatorStateUpdate `protobuf:"bytes,103,opt,name=authenticator_state_update,json=authenticatorStateUpdate,proto3,oneof"`
}

type TransactionKind_EndOfEpoch struct {
	// Set of operations to run at the end of the epoch to close out the current epoch and start
	// the next one.
	EndOfEpoch *EndOfEpochTransaction `protobuf:"bytes,104,opt,name=end_of_epoch,json=endOfEpoch,proto3,oneof"`
}

type TransactionKind_RandomnessStateUpdate struct {
	// Randomness update.
	RandomnessStateUpdate *RandomnessStateUpdate `protobuf:"bytes,105,opt,name=randomness_state_update,json=randomnessStateUpdate,proto3,oneof"`
}

type TransactionKind_ConsensusCommitPrologueV2 struct {
	// V2 consensus commit update.
	ConsensusCommitPrologueV2 *ConsensusCommitPrologue `protobuf:"bytes,106,opt,name=consensus_commit_prologue_v2,json=consensusCommitPrologueV2,proto3,oneof"`
}

type TransactionKind_ConsensusCommitPrologueV3 struct {
	// V3 consensus commit update.
	ConsensusCommitPrologueV3 *ConsensusCommitPrologue `protobuf:"bytes,107,opt,name=consensus_commit_prologue_v3,json=consensusCommitPrologueV3,proto3,oneof"`
}

type TransactionKind_ConsensusCommitPrologueV4 struct {
	// V4 consensus commit update.
	ConsensusCommitPrologueV4 *ConsensusCommitPrologue `protobuf:"bytes,108,opt,name=consensus_commit_prologue_v4,json=consensusCommitPrologueV4,proto3,oneof"`
}

func (*TransactionKind_ProgrammableTransaction) isTransactionKind_Kind() {}

func (*TransactionKind_ChangeEpoch) isTransactionKind_Kind() {}

func (*TransactionKind_Genesis) isTransactionKind_Kind() {}

func (*TransactionKind_ConsensusCommitPrologueV1) isTransactionKind_Kind() {}

func (*TransactionKind_AuthenticatorStateUpdate) isTransactionKind_Kind() {}

func (*TransactionKind_EndOfEpoch) isTransactionKind_Kind() {}

func (*TransactionKind_RandomnessStateUpdate) isTransactionKind_Kind() {}

func (*TransactionKind_ConsensusCommitPrologueV2) isTransactionKind_Kind() {}

func (*TransactionKind_ConsensusCommitPrologueV3) isTransactionKind_Kind() {}

func (*TransactionKind_ConsensusCommitPrologueV4) isTransactionKind_Kind() {}

// A user transaction.
//
// Contains a series of native commands and Move calls where the results of one command can be
// used in future commands.
type ProgrammableTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Input objects or primitive values.
	Inputs []*Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// The commands to be executed sequentially. A failure in any command
	// results in the failure of the entire transaction.
	Commands      []*Command `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgrammableTransaction) Reset() {
	*x = ProgrammableTransaction{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgrammableTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgrammableTransaction) ProtoMessage() {}

func (x *ProgrammableTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgrammableTransaction.ProtoReflect.Descriptor instead.
func (*ProgrammableTransaction) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *ProgrammableTransaction) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ProgrammableTransaction) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

// A single command in a programmable transaction.
type Command struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Command:
	//
	//	*Command_MoveCall
	//	*Command_TransferObjects
	//	*Command_SplitCoins
	//	*Command_MergeCoins
	//	*Command_Publish
	//	*Command_MakeMoveVector
	//	*Command_Upgrade
	Command       isCommand_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *Command) GetCommand() isCommand_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Command) GetMoveCall() *MoveCall {
	if x != nil {
		if x, ok := x.Command.(*Command_MoveCall); ok {
			return x.MoveCall
		}
	}
	return nil
}

func (x *Command) GetTransferObjects() *TransferObjects {
	if x != nil {
		if x, ok := x.Command.(*Command_TransferObjects); ok {
			return x.TransferObjects
		}
	}
	return nil
}

func (x *Command) GetSplitCoins() *SplitCoins {
	if x != nil {
		if x, ok := x.Command.(*Command_SplitCoins); ok {
			return x.SplitCoins
		}
	}
	return nil
}

func (x *Command) GetMergeCoins() *MergeCoins {
	if x != nil {
		if x, ok := x.Command.(*Command_MergeCoins); ok {
			return x.MergeCoins
		}
	}
	return nil
}

func (x *Command) GetPublish() *Publish {
	if x != nil {
		if x, ok := x.Command.(*Command_Publish); ok {
			return x.Publish
		}
	}
	return nil
}

func (x *Command) GetMakeMoveVector() *MakeMoveVector {
	if x != nil {
		if x, ok := x.Command.(*Command_MakeMoveVector); ok {
			return x.MakeMoveVector
		}
	}
	return nil
}

func (x *Command) GetUpgrade() *Upgrade {
	if x != nil {
		if x, ok := x.Command.(*Command_Upgrade); ok {
			return x.Upgrade
		}
	}
	return nil
}

type isCommand_Command interface {
	isCommand_Command()
}

type Command_MoveCall struct {
	// A call to either an entry or a public Move function.
	MoveCall *MoveCall `protobuf:"bytes,1,opt,name=move_call,json=moveCall,proto3,oneof"`
}

type Command_TransferObjects struct {
	// `(Vec<forall T:key+store. T>, address)`
	// It sends n-objects to the specified address. These objects must have store
	// (public transfer) and either the previous owner must be an address or the object must
	// be newly created.
	TransferObjects *TransferObjects `protobuf:"bytes,2,opt,name=transfer_objects,json=transferObjects,proto3,oneof"`
}

type Command_SplitCoins struct {
	// `(&mut Coin<T>, Vec<u64>)` -> `Vec<Coin<T>>`
	// It splits off some amounts into new coins with those amounts.
	SplitCoins *SplitCoins `protobuf:"bytes,3,opt,name=split_coins,json=splitCoins,proto3,oneof"`
}

type Command_MergeCoins struct {
	// `(&mut Coin<T>, Vec<Coin<T>>)`
	// It merges n-coins into the first coin.
	MergeCoins *MergeCoins `protobuf:"bytes,4,opt,name=merge_coins,json=mergeCoins,proto3,oneof"`
}

type Command_Publish struct {
	// Publishes a Move package. It takes the package bytes and a list of the package's transitive
	// dependencies to link against on chain.
	Publish *Publish `protobuf:"bytes,5,opt,name=publish,proto3,oneof"`
}

type Command_MakeMoveVector struct {
	// `forall T: Vec<T> -> vector<T>`
	// Given n-values of the same type, it constructs a vector. For non-objects or an empty vector,
	// the type tag must be specified.
	MakeMoveVector *MakeMoveVector `protobuf:"bytes,6,opt,name=make_move_vector,json=makeMoveVector,proto3,oneof"`
}

type Command_Upgrade struct {
	// Upgrades a Move package.
	// Takes (in order):
	//  1. A vector of serialized modules for the package.
	//  2. A vector of object ids for the transitive dependencies of the new package.
	//  3. The object ID of the package being upgraded.
	//  4. An argument holding the `UpgradeTicket` that must have been produced from an earlier command in the same
	//     programmable transaction.
	Upgrade *Upgrade `protobuf:"bytes,7,opt,name=upgrade,proto3,oneof"`
}

func (*Command_MoveCall) isCommand_Command() {}

func (*Command_TransferObjects) isCommand_Command() {}

func (*Command_SplitCoins) isCommand_Command() {}

func (*Command_MergeCoins) isCommand_Command() {}

func (*Command_Publish) isCommand_Command() {}

func (*Command_MakeMoveVector) isCommand_Command() {}

func (*Command_Upgrade) isCommand_Command() {}

// Command to call a Move function.
//
// Functions that can be called by a `MoveCall` command are those that have a function signature
// that is either `entry` or `public` (which don't have a reference return type).
type MoveCall struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The package containing the module and function.
	Package *string `protobuf:"bytes,1,opt,name=package,proto3,oneof" json:"package,omitempty"`
	// The specific module in the package containing the function.
	Module *string `protobuf:"bytes,2,opt,name=module,proto3,oneof" json:"module,omitempty"`
	// The function to be called.
	Function *string `protobuf:"bytes,3,opt,name=function,proto3,oneof" json:"function,omitempty"`
	// The type arguments to the function.
	TypeArguments []string `protobuf:"bytes,4,rep,name=type_arguments,json=typeArguments,proto3" json:"type_arguments,omitempty"`
	// The arguments to the function.
	Arguments     []*Argument `protobuf:"bytes,5,rep,name=arguments,proto3" json:"arguments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveCall) Reset() {
	*x = MoveCall{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveCall) ProtoMessage() {}

func (x *MoveCall) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveCall.ProtoReflect.Descriptor instead.
func (*MoveCall) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *MoveCall) GetPackage() string {
	if x != nil && x.Package != nil {
		return *x.Package
	}
	return ""
}

func (x *MoveCall) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *MoveCall) GetFunction() string {
	if x != nil && x.Function != nil {
		return *x.Function
	}
	return ""
}

func (x *MoveCall) GetTypeArguments() []string {
	if x != nil {
		return x.TypeArguments
	}
	return nil
}

func (x *MoveCall) GetArguments() []*Argument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// Command to transfer ownership of a set of objects to an address.
type TransferObjects struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Set of objects to transfer.
	Objects []*Argument `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	// The address to transfer ownership to.
	Address       *Argument `protobuf:"bytes,2,opt,name=address,proto3,oneof" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferObjects) Reset() {
	*x = TransferObjects{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferObjects) ProtoMessage() {}

func (x *TransferObjects) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferObjects.ProtoReflect.Descriptor instead.
func (*TransferObjects) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *TransferObjects) GetObjects() []*Argument {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *TransferObjects) GetAddress() *Argument {
	if x != nil {
		return x.Address
	}
	return nil
}

// Command to split a single coin object into multiple coins.
type SplitCoins struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The coin to split.
	Coin *Argument `protobuf:"bytes,1,opt,name=coin,proto3,oneof" json:"coin,omitempty"`
	// The amounts to split off.
	Amounts       []*Argument `protobuf:"bytes,2,rep,name=amounts,proto3" json:"amounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SplitCoins) Reset() {
	*x = SplitCoins{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SplitCoins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitCoins) ProtoMessage() {}

func (x *SplitCoins) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitCoins.ProtoReflect.Descriptor instead.
func (*SplitCoins) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *SplitCoins) GetCoin() *Argument {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *SplitCoins) GetAmounts() []*Argument {
	if x != nil {
		return x.Amounts
	}
	return nil
}

// Command to merge multiple coins of the same type into a single coin.
type MergeCoins struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Coin to merge coins into.
	Coin *Argument `protobuf:"bytes,1,opt,name=coin,proto3,oneof" json:"coin,omitempty"`
	// Set of coins to merge into `coin`.
	//
	// All listed coins must be of the same type and be the same type as `coin`
	CoinsToMerge  []*Argument `protobuf:"bytes,2,rep,name=coins_to_merge,json=coinsToMerge,proto3" json:"coins_to_merge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeCoins) Reset() {
	*x = MergeCoins{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeCoins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeCoins) ProtoMessage() {}

func (x *MergeCoins) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeCoins.ProtoReflect.Descriptor instead.
func (*MergeCoins) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *MergeCoins) GetCoin() *Argument {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *MergeCoins) GetCoinsToMerge() []*Argument {
	if x != nil {
		return x.CoinsToMerge
	}
	return nil
}

// Command to publish a new Move package.
type Publish struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The serialized Move modules.
	Modules [][]byte `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	// Set of packages that the to-be published package depends on.
	Dependencies  []string `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Publish) Reset() {
	*x = Publish{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publish) ProtoMessage() {}

func (x *Publish) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publish.ProtoReflect.Descriptor instead.
func (*Publish) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *Publish) GetModules() [][]byte {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Publish) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

// Command to build a Move vector out of a set of individual elements.
type MakeMoveVector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of the individual elements.
	//
	// This is required to be set when the type can't be inferred, for example when the set of
	// provided arguments are all pure input values.
	ElementType *string `protobuf:"bytes,1,opt,name=element_type,json=elementType,proto3,oneof" json:"element_type,omitempty"`
	// The set individual elements to build the vector with.
	Elements      []*Argument `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MakeMoveVector) Reset() {
	*x = MakeMoveVector{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MakeMoveVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeMoveVector) ProtoMessage() {}

func (x *MakeMoveVector) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeMoveVector.ProtoReflect.Descriptor instead.
func (*MakeMoveVector) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *MakeMoveVector) GetElementType() string {
	if x != nil && x.ElementType != nil {
		return *x.ElementType
	}
	return ""
}

func (x *MakeMoveVector) GetElements() []*Argument {
	if x != nil {
		return x.Elements
	}
	return nil
}

// Command to upgrade an already published package.
type Upgrade struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The serialized Move modules.
	Modules [][]byte `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	// Set of packages that the to-be published package depends on.
	Dependencies []string `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	// Package ID of the package to upgrade.
	Package *string `protobuf:"bytes,3,opt,name=package,proto3,oneof" json:"package,omitempty"`
	// Ticket authorizing the upgrade.
	Ticket        *Argument `protobuf:"bytes,4,opt,name=ticket,proto3,oneof" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Upgrade) Reset() {
	*x = Upgrade{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Upgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upgrade) ProtoMessage() {}

func (x *Upgrade) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upgrade.ProtoReflect.Descriptor instead.
func (*Upgrade) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *Upgrade) GetModules() [][]byte {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Upgrade) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *Upgrade) GetPackage() string {
	if x != nil && x.Package != nil {
		return *x.Package
	}
	return ""
}

func (x *Upgrade) GetTicket() *Argument {
	if x != nil {
		return x.Ticket
	}
	return nil
}

// Randomness update.
type RandomnessStateUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Epoch of the randomness state update transaction.
	Epoch *uint64 `protobuf:"varint,1,opt,name=epoch,proto3,oneof" json:"epoch,omitempty"`
	// Randomness round of the update.
	RandomnessRound *uint64 `protobuf:"varint,2,opt,name=randomness_round,json=randomnessRound,proto3,oneof" json:"randomness_round,omitempty"`
	// Updated random bytes.
	RandomBytes []byte `protobuf:"bytes,3,opt,name=random_bytes,json=randomBytes,proto3,oneof" json:"random_bytes,omitempty"`
	// The initial version of the randomness object that it was shared at.
	RandomnessObjectInitialSharedVersion *uint64 `protobuf:"varint,4,opt,name=randomness_object_initial_shared_version,json=randomnessObjectInitialSharedVersion,proto3,oneof" json:"randomness_object_initial_shared_version,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *RandomnessStateUpdate) Reset() {
	*x = RandomnessStateUpdate{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RandomnessStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomnessStateUpdate) ProtoMessage() {}

func (x *RandomnessStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomnessStateUpdate.ProtoReflect.Descriptor instead.
func (*RandomnessStateUpdate) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *RandomnessStateUpdate) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *RandomnessStateUpdate) GetRandomnessRound() uint64 {
	if x != nil && x.RandomnessRound != nil {
		return *x.RandomnessRound
	}
	return 0
}

func (x *RandomnessStateUpdate) GetRandomBytes() []byte {
	if x != nil {
		return x.RandomBytes
	}
	return nil
}

func (x *RandomnessStateUpdate) GetRandomnessObjectInitialSharedVersion() uint64 {
	if x != nil && x.RandomnessObjectInitialSharedVersion != nil {
		return *x.RandomnessObjectInitialSharedVersion
	}
	return 0
}

// System transaction used to change the epoch.
type ChangeEpoch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The next (to become) epoch ID.
	Epoch *uint64 `protobuf:"varint,1,opt,name=epoch,proto3,oneof" json:"epoch,omitempty"`
	// The protocol version in effect in the new epoch.
	ProtocolVersion *uint64 `protobuf:"varint,2,opt,name=protocol_version,json=protocolVersion,proto3,oneof" json:"protocol_version,omitempty"`
	// The total amount of gas charged for storage during the epoch.
	StorageCharge *uint64 `protobuf:"varint,3,opt,name=storage_charge,json=storageCharge,proto3,oneof" json:"storage_charge,omitempty"`
	// The total amount of gas charged for computation during the epoch.
	ComputationCharge *uint64 `protobuf:"varint,4,opt,name=computation_charge,json=computationCharge,proto3,oneof" json:"computation_charge,omitempty"`
	// The amount of storage rebate refunded to the txn senders.
	StorageRebate *uint64 `protobuf:"varint,5,opt,name=storage_rebate,json=storageRebate,proto3,oneof" json:"storage_rebate,omitempty"`
	// The non-refundable storage fee.
	NonRefundableStorageFee *uint64 `protobuf:"varint,6,opt,name=non_refundable_storage_fee,json=nonRefundableStorageFee,proto3,oneof" json:"non_refundable_storage_fee,omitempty"`
	// Unix timestamp when epoch started.
	EpochStartTimestamp *timestamp.Timestamp `protobuf:"bytes,7,opt,name=epoch_start_timestamp,json=epochStartTimestamp,proto3,oneof" json:"epoch_start_timestamp,omitempty"`
	// System packages (specifically framework and Move stdlib) that are written before the new
	// epoch starts. This tracks framework upgrades on chain. When executing the `ChangeEpoch` txn,
	// the validator must write out the following modules.  Modules are provided with the version they
	// will be upgraded to, their modules in serialized form (which include their package ID), and
	// a list of their transitive dependencies.
	SystemPackages []*SystemPackage `protobuf:"bytes,8,rep,name=system_packages,json=systemPackages,proto3" json:"system_packages,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChangeEpoch) Reset() {
	*x = ChangeEpoch{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEpoch) ProtoMessage() {}

func (x *ChangeEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEpoch.ProtoReflect.Descriptor instead.
func (*ChangeEpoch) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeEpoch) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *ChangeEpoch) GetProtocolVersion() uint64 {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return 0
}

func (x *ChangeEpoch) GetStorageCharge() uint64 {
	if x != nil && x.StorageCharge != nil {
		return *x.StorageCharge
	}
	return 0
}

func (x *ChangeEpoch) GetComputationCharge() uint64 {
	if x != nil && x.ComputationCharge != nil {
		return *x.ComputationCharge
	}
	return 0
}

func (x *ChangeEpoch) GetStorageRebate() uint64 {
	if x != nil && x.StorageRebate != nil {
		return *x.StorageRebate
	}
	return 0
}

func (x *ChangeEpoch) GetNonRefundableStorageFee() uint64 {
	if x != nil && x.NonRefundableStorageFee != nil {
		return *x.NonRefundableStorageFee
	}
	return 0
}

func (x *ChangeEpoch) GetEpochStartTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.EpochStartTimestamp
	}
	return nil
}

func (x *ChangeEpoch) GetSystemPackages() []*SystemPackage {
	if x != nil {
		return x.SystemPackages
	}
	return nil
}

// System package.
type SystemPackage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of the package.
	Version *uint64 `protobuf:"varint,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	// Move modules.
	Modules [][]byte `protobuf:"bytes,2,rep,name=modules,proto3" json:"modules,omitempty"`
	// Package dependencies.
	Dependencies  []string `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemPackage) Reset() {
	*x = SystemPackage{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemPackage) ProtoMessage() {}

func (x *SystemPackage) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemPackage.ProtoReflect.Descriptor instead.
func (*SystemPackage) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *SystemPackage) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *SystemPackage) GetModules() [][]byte {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *SystemPackage) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

// The genesis transaction.
type GenesisTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Set of genesis objects.
	Objects       []*Object `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenesisTransaction) Reset() {
	*x = GenesisTransaction{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenesisTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisTransaction) ProtoMessage() {}

func (x *GenesisTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisTransaction.ProtoReflect.Descriptor instead.
func (*GenesisTransaction) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *GenesisTransaction) GetObjects() []*Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

// Consensus commit prologue system transaction.
//
// This message can represent V1, V2, and V3 prologue types.
type ConsensusCommitPrologue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Epoch of the commit prologue transaction.
	//
	// Present in V1, V2, V3, V4.
	Epoch *uint64 `protobuf:"varint,1,opt,name=epoch,proto3,oneof" json:"epoch,omitempty"`
	// Consensus round of the commit.
	//
	// Present in V1, V2, V3, V4.
	Round *uint64 `protobuf:"varint,2,opt,name=round,proto3,oneof" json:"round,omitempty"`
	// Unix timestamp from consensus.
	//
	// Present in V1, V2, V3, V4.
	CommitTimestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=commit_timestamp,json=commitTimestamp,proto3,oneof" json:"commit_timestamp,omitempty"`
	// Digest of consensus output.
	//
	// Present in V2, V3, V4.
	ConsensusCommitDigest *string `protobuf:"bytes,4,opt,name=consensus_commit_digest,json=consensusCommitDigest,proto3,oneof" json:"consensus_commit_digest,omitempty"`
	// The sub DAG index of the consensus commit. This field is populated if there
	// are multiple consensus commits per round.
	//
	// Present in V3, V4.
	SubDagIndex *uint64 `protobuf:"varint,5,opt,name=sub_dag_index,json=subDagIndex,proto3,oneof" json:"sub_dag_index,omitempty"`
	// Stores consensus handler determined shared object version assignments.
	//
	// Present in V3, V4.
	ConsensusDeterminedVersionAssignments *ConsensusDeterminedVersionAssignments `protobuf:"bytes,6,opt,name=consensus_determined_version_assignments,json=consensusDeterminedVersionAssignments,proto3,oneof" json:"consensus_determined_version_assignments,omitempty"`
	// Digest of any additional state computed by the consensus handler.
	// Used to detect forking bugs as early as possible.
	//
	// Present in V4.
	AdditionalStateDigest *string `protobuf:"bytes,7,opt,name=additional_state_digest,json=additionalStateDigest,proto3,oneof" json:"additional_state_digest,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ConsensusCommitPrologue) Reset() {
	*x = ConsensusCommitPrologue{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusCommitPrologue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusCommitPrologue) ProtoMessage() {}

func (x *ConsensusCommitPrologue) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusCommitPrologue.ProtoReflect.Descriptor instead.
func (*ConsensusCommitPrologue) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *ConsensusCommitPrologue) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *ConsensusCommitPrologue) GetRound() uint64 {
	if x != nil && x.Round != nil {
		return *x.Round
	}
	return 0
}

func (x *ConsensusCommitPrologue) GetCommitTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.CommitTimestamp
	}
	return nil
}

func (x *ConsensusCommitPrologue) GetConsensusCommitDigest() string {
	if x != nil && x.ConsensusCommitDigest != nil {
		return *x.ConsensusCommitDigest
	}
	return ""
}

func (x *ConsensusCommitPrologue) GetSubDagIndex() uint64 {
	if x != nil && x.SubDagIndex != nil {
		return *x.SubDagIndex
	}
	return 0
}

func (x *ConsensusCommitPrologue) GetConsensusDeterminedVersionAssignments() *ConsensusDeterminedVersionAssignments {
	if x != nil {
		return x.ConsensusDeterminedVersionAssignments
	}
	return nil
}

func (x *ConsensusCommitPrologue) GetAdditionalStateDigest() string {
	if x != nil && x.AdditionalStateDigest != nil {
		return *x.AdditionalStateDigest
	}
	return ""
}

// Object version assignment from consensus.
type VersionAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// `ObjectId` of the object.
	ObjectId *string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3,oneof" json:"object_id,omitempty"`
	// Assigned version.
	Version       *uint64 `protobuf:"varint,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionAssignment) Reset() {
	*x = VersionAssignment{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionAssignment) ProtoMessage() {}

func (x *VersionAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionAssignment.ProtoReflect.Descriptor instead.
func (*VersionAssignment) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *VersionAssignment) GetObjectId() string {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return ""
}

func (x *VersionAssignment) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

// A transaction that was canceled.
type CanceledTransaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Digest of the canceled transaction.
	Digest *string `protobuf:"bytes,1,opt,name=digest,proto3,oneof" json:"digest,omitempty"`
	// List of object version assignments.
	VersionAssignments []*VersionAssignment `protobuf:"bytes,2,rep,name=version_assignments,json=versionAssignments,proto3" json:"version_assignments,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CanceledTransaction) Reset() {
	*x = CanceledTransaction{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanceledTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanceledTransaction) ProtoMessage() {}

func (x *CanceledTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanceledTransaction.ProtoReflect.Descriptor instead.
func (*CanceledTransaction) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{19}
}

func (x *CanceledTransaction) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *CanceledTransaction) GetVersionAssignments() []*VersionAssignment {
	if x != nil {
		return x.VersionAssignments
	}
	return nil
}

// Set of canceled transactions.
type CanceledTransactions struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CanceledTransactions []*CanceledTransaction `protobuf:"bytes,1,rep,name=canceled_transactions,json=canceledTransactions,proto3" json:"canceled_transactions,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CanceledTransactions) Reset() {
	*x = CanceledTransactions{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanceledTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanceledTransactions) ProtoMessage() {}

func (x *CanceledTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanceledTransactions.ProtoReflect.Descriptor instead.
func (*CanceledTransactions) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{20}
}

func (x *CanceledTransactions) GetCanceledTransactions() []*CanceledTransaction {
	if x != nil {
		return x.CanceledTransactions
	}
	return nil
}

// Version assignments performed by consensus.
type ConsensusDeterminedVersionAssignments struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*ConsensusDeterminedVersionAssignments_CanceledTransactions
	Kind          isConsensusDeterminedVersionAssignments_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsensusDeterminedVersionAssignments) Reset() {
	*x = ConsensusDeterminedVersionAssignments{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusDeterminedVersionAssignments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusDeterminedVersionAssignments) ProtoMessage() {}

func (x *ConsensusDeterminedVersionAssignments) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusDeterminedVersionAssignments.ProtoReflect.Descriptor instead.
func (*ConsensusDeterminedVersionAssignments) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{21}
}

func (x *ConsensusDeterminedVersionAssignments) GetKind() isConsensusDeterminedVersionAssignments_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *ConsensusDeterminedVersionAssignments) GetCanceledTransactions() *CanceledTransactions {
	if x != nil {
		if x, ok := x.Kind.(*ConsensusDeterminedVersionAssignments_CanceledTransactions); ok {
			return x.CanceledTransactions
		}
	}
	return nil
}

type isConsensusDeterminedVersionAssignments_Kind interface {
	isConsensusDeterminedVersionAssignments_Kind()
}

type ConsensusDeterminedVersionAssignments_CanceledTransactions struct {
	// Canceled transaction version assignment.
	CanceledTransactions *CanceledTransactions `protobuf:"bytes,2,opt,name=canceled_transactions,json=canceledTransactions,proto3,oneof"`
}

func (*ConsensusDeterminedVersionAssignments_CanceledTransactions) isConsensusDeterminedVersionAssignments_Kind() {
}

// Update the set of valid JWKs.
type AuthenticatorStateUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Epoch of the authenticator state update transaction.
	Epoch *uint64 `protobuf:"varint,1,opt,name=epoch,proto3,oneof" json:"epoch,omitempty"`
	// Consensus round of the authenticator state update.
	Round *uint64 `protobuf:"varint,2,opt,name=round,proto3,oneof" json:"round,omitempty"`
	// Newly active JWKs.
	NewActiveJwks []*ActiveJwk `protobuf:"bytes,3,rep,name=new_active_jwks,json=newActiveJwks,proto3" json:"new_active_jwks,omitempty"`
	// The initial version of the authenticator object that it was shared at.
	AuthenticatorObjectInitialSharedVersion *uint64 `protobuf:"varint,4,opt,name=authenticator_object_initial_shared_version,json=authenticatorObjectInitialSharedVersion,proto3,oneof" json:"authenticator_object_initial_shared_version,omitempty"`
	unknownFields                           protoimpl.UnknownFields
	sizeCache                               protoimpl.SizeCache
}

func (x *AuthenticatorStateUpdate) Reset() {
	*x = AuthenticatorStateUpdate{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticatorStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticatorStateUpdate) ProtoMessage() {}

func (x *AuthenticatorStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticatorStateUpdate.ProtoReflect.Descriptor instead.
func (*AuthenticatorStateUpdate) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{22}
}

func (x *AuthenticatorStateUpdate) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *AuthenticatorStateUpdate) GetRound() uint64 {
	if x != nil && x.Round != nil {
		return *x.Round
	}
	return 0
}

func (x *AuthenticatorStateUpdate) GetNewActiveJwks() []*ActiveJwk {
	if x != nil {
		return x.NewActiveJwks
	}
	return nil
}

func (x *AuthenticatorStateUpdate) GetAuthenticatorObjectInitialSharedVersion() uint64 {
	if x != nil && x.AuthenticatorObjectInitialSharedVersion != nil {
		return *x.AuthenticatorObjectInitialSharedVersion
	}
	return 0
}

// A new JWK.
type ActiveJwk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier used to uniquely identify a JWK.
	Id *JwkId `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The JWK.
	Jwk *Jwk `protobuf:"bytes,2,opt,name=jwk,proto3,oneof" json:"jwk,omitempty"`
	// Most recent epoch in which the JWK was validated.
	Epoch         *uint64 `protobuf:"varint,3,opt,name=epoch,proto3,oneof" json:"epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveJwk) Reset() {
	*x = ActiveJwk{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveJwk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveJwk) ProtoMessage() {}

func (x *ActiveJwk) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveJwk.ProtoReflect.Descriptor instead.
func (*ActiveJwk) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{23}
}

func (x *ActiveJwk) GetId() *JwkId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ActiveJwk) GetJwk() *Jwk {
	if x != nil {
		return x.Jwk
	}
	return nil
}

func (x *ActiveJwk) GetEpoch() uint64 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

// Key to uniquely identify a JWK.
type JwkId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The issuer or identity of the OIDC provider.
	Iss *string `protobuf:"bytes,1,opt,name=iss,proto3,oneof" json:"iss,omitempty"`
	// A key ID used to uniquely identify a key from an OIDC provider.
	Kid           *string `protobuf:"bytes,2,opt,name=kid,proto3,oneof" json:"kid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwkId) Reset() {
	*x = JwkId{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwkId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwkId) ProtoMessage() {}

func (x *JwkId) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwkId.ProtoReflect.Descriptor instead.
func (*JwkId) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{24}
}

func (x *JwkId) GetIss() string {
	if x != nil && x.Iss != nil {
		return *x.Iss
	}
	return ""
}

func (x *JwkId) GetKid() string {
	if x != nil && x.Kid != nil {
		return *x.Kid
	}
	return ""
}

// A JSON web key.
//
// Struct that contains info for a JWK. A list of them for different kinds can
// be retrieved from the JWK endpoint (for example, <https://www.googleapis.com/oauth2/v3/certs>).
// The JWK is used to verify the JWT token.
type Jwk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Key type parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.1.
	Kty *string `protobuf:"bytes,1,opt,name=kty,proto3,oneof" json:"kty,omitempty"`
	// RSA public exponent, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.
	E *string `protobuf:"bytes,2,opt,name=e,proto3,oneof" json:"e,omitempty"`
	// RSA modulus, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.
	N *string `protobuf:"bytes,3,opt,name=n,proto3,oneof" json:"n,omitempty"`
	// Algorithm parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.4.
	Alg           *string `protobuf:"bytes,4,opt,name=alg,proto3,oneof" json:"alg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jwk) Reset() {
	*x = Jwk{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jwk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwk) ProtoMessage() {}

func (x *Jwk) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwk.ProtoReflect.Descriptor instead.
func (*Jwk) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{25}
}

func (x *Jwk) GetKty() string {
	if x != nil && x.Kty != nil {
		return *x.Kty
	}
	return ""
}

func (x *Jwk) GetE() string {
	if x != nil && x.E != nil {
		return *x.E
	}
	return ""
}

func (x *Jwk) GetN() string {
	if x != nil && x.N != nil {
		return *x.N
	}
	return ""
}

func (x *Jwk) GetAlg() string {
	if x != nil && x.Alg != nil {
		return *x.Alg
	}
	return ""
}

// Set of operations run at the end of the epoch to close out the current epoch
// and start the next one.
type EndOfEpochTransaction struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Transactions  []*EndOfEpochTransactionKind `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndOfEpochTransaction) Reset() {
	*x = EndOfEpochTransaction{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndOfEpochTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndOfEpochTransaction) ProtoMessage() {}

func (x *EndOfEpochTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndOfEpochTransaction.ProtoReflect.Descriptor instead.
func (*EndOfEpochTransaction) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{26}
}

func (x *EndOfEpochTransaction) GetTransactions() []*EndOfEpochTransactionKind {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// Operation run at the end of an epoch.
type EndOfEpochTransactionKind struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*EndOfEpochTransactionKind_ChangeEpoch
	//	*EndOfEpochTransactionKind_AuthenticatorStateExpire
	//	*EndOfEpochTransactionKind_ExecutionTimeObservations
	//	*EndOfEpochTransactionKind_AuthenticatorStateCreate
	//	*EndOfEpochTransactionKind_RandomnessStateCreate
	//	*EndOfEpochTransactionKind_DenyListStateCreate
	//	*EndOfEpochTransactionKind_BridgeStateCreate
	//	*EndOfEpochTransactionKind_BridgeCommitteeInit
	Kind          isEndOfEpochTransactionKind_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndOfEpochTransactionKind) Reset() {
	*x = EndOfEpochTransactionKind{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndOfEpochTransactionKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndOfEpochTransactionKind) ProtoMessage() {}

func (x *EndOfEpochTransactionKind) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndOfEpochTransactionKind.ProtoReflect.Descriptor instead.
func (*EndOfEpochTransactionKind) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{27}
}

func (x *EndOfEpochTransactionKind) GetKind() isEndOfEpochTransactionKind_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *EndOfEpochTransactionKind) GetChangeEpoch() *ChangeEpoch {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_ChangeEpoch); ok {
			return x.ChangeEpoch
		}
	}
	return nil
}

func (x *EndOfEpochTransactionKind) GetAuthenticatorStateExpire() *AuthenticatorStateExpire {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_AuthenticatorStateExpire); ok {
			return x.AuthenticatorStateExpire
		}
	}
	return nil
}

func (x *EndOfEpochTransactionKind) GetExecutionTimeObservations() *ExecutionTimeObservations {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_ExecutionTimeObservations); ok {
			return x.ExecutionTimeObservations
		}
	}
	return nil
}

func (x *EndOfEpochTransactionKind) GetAuthenticatorStateCreate() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_AuthenticatorStateCreate); ok {
			return x.AuthenticatorStateCreate
		}
	}
	return nil
}

func (x *EndOfEpochTransactionKind) GetRandomnessStateCreate() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_RandomnessStateCreate); ok {
			return x.RandomnessStateCreate
		}
	}
	return nil
}

func (x *EndOfEpochTransactionKind) GetDenyListStateCreate() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_DenyListStateCreate); ok {
			return x.DenyListStateCreate
		}
	}
	return nil
}

func (x *EndOfEpochTransactionKind) GetBridgeStateCreate() string {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_BridgeStateCreate); ok {
			return x.BridgeStateCreate
		}
	}
	return ""
}

func (x *EndOfEpochTransactionKind) GetBridgeCommitteeInit() uint64 {
	if x != nil {
		if x, ok := x.Kind.(*EndOfEpochTransactionKind_BridgeCommitteeInit); ok {
			return x.BridgeCommitteeInit
		}
	}
	return 0
}

type isEndOfEpochTransactionKind_Kind interface {
	isEndOfEpochTransactionKind_Kind()
}

type EndOfEpochTransactionKind_ChangeEpoch struct {
	// End the epoch and start the next one.
	ChangeEpoch *ChangeEpoch `protobuf:"bytes,2,opt,name=change_epoch,json=changeEpoch,proto3,oneof"`
}

type EndOfEpochTransactionKind_AuthenticatorStateExpire struct {
	// Expire JWKs used for zklogin.
	AuthenticatorStateExpire *AuthenticatorStateExpire `protobuf:"bytes,3,opt,name=authenticator_state_expire,json=authenticatorStateExpire,proto3,oneof"`
}

type EndOfEpochTransactionKind_ExecutionTimeObservations struct {
	// Execution time observations from the committee to preserve cross epoch
	ExecutionTimeObservations *ExecutionTimeObservations `protobuf:"bytes,4,opt,name=execution_time_observations,json=executionTimeObservations,proto3,oneof"`
}

type EndOfEpochTransactionKind_AuthenticatorStateCreate struct {
	// Create and initialize the authenticator object used for zklogin.
	AuthenticatorStateCreate *emptypb.Empty `protobuf:"bytes,200,opt,name=authenticator_state_create,json=authenticatorStateCreate,proto3,oneof"`
}

type EndOfEpochTransactionKind_RandomnessStateCreate struct {
	// Create and initialize the randomness object.
	RandomnessStateCreate *emptypb.Empty `protobuf:"bytes,201,opt,name=randomness_state_create,json=randomnessStateCreate,proto3,oneof"`
}

type EndOfEpochTransactionKind_DenyListStateCreate struct {
	// Create and initialize the deny list object.
	DenyListStateCreate *emptypb.Empty `protobuf:"bytes,202,opt,name=deny_list_state_create,json=denyListStateCreate,proto3,oneof"`
}

type EndOfEpochTransactionKind_BridgeStateCreate struct {
	// Create and initialize the bridge object.
	BridgeStateCreate string `protobuf:"bytes,203,opt,name=bridge_state_create,json=bridgeStateCreate,proto3,oneof"`
}

type EndOfEpochTransactionKind_BridgeCommitteeInit struct {
	// Initialize the bridge committee.
	BridgeCommitteeInit uint64 `protobuf:"varint,204,opt,name=bridge_committee_init,json=bridgeCommitteeInit,proto3,oneof"`
}

func (*EndOfEpochTransactionKind_ChangeEpoch) isEndOfEpochTransactionKind_Kind() {}

func (*EndOfEpochTransactionKind_AuthenticatorStateExpire) isEndOfEpochTransactionKind_Kind() {}

func (*EndOfEpochTransactionKind_ExecutionTimeObservations) isEndOfEpochTransactionKind_Kind() {}

func (*EndOfEpochTransactionKind_AuthenticatorStateCreate) isEndOfEpochTransactionKind_Kind() {}

func (*EndOfEpochTransactionKind_RandomnessStateCreate) isEndOfEpochTransactionKind_Kind() {}

func (*EndOfEpochTransactionKind_DenyListStateCreate) isEndOfEpochTransactionKind_Kind() {}

func (*EndOfEpochTransactionKind_BridgeStateCreate) isEndOfEpochTransactionKind_Kind() {}

func (*EndOfEpochTransactionKind_BridgeCommitteeInit) isEndOfEpochTransactionKind_Kind() {}

// Expire old JWKs.
type AuthenticatorStateExpire struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expire JWKs that have a lower epoch than this.
	MinEpoch *uint64 `protobuf:"varint,1,opt,name=min_epoch,json=minEpoch,proto3,oneof" json:"min_epoch,omitempty"`
	// The initial version of the authenticator object that it was shared at.
	AuthenticatorObjectInitialSharedVersion *uint64 `protobuf:"varint,2,opt,name=authenticator_object_initial_shared_version,json=authenticatorObjectInitialSharedVersion,proto3,oneof" json:"authenticator_object_initial_shared_version,omitempty"`
	unknownFields                           protoimpl.UnknownFields
	sizeCache                               protoimpl.SizeCache
}

func (x *AuthenticatorStateExpire) Reset() {
	*x = AuthenticatorStateExpire{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticatorStateExpire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticatorStateExpire) ProtoMessage() {}

func (x *AuthenticatorStateExpire) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticatorStateExpire.ProtoReflect.Descriptor instead.
func (*AuthenticatorStateExpire) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{28}
}

func (x *AuthenticatorStateExpire) GetMinEpoch() uint64 {
	if x != nil && x.MinEpoch != nil {
		return *x.MinEpoch
	}
	return 0
}

func (x *AuthenticatorStateExpire) GetAuthenticatorObjectInitialSharedVersion() uint64 {
	if x != nil && x.AuthenticatorObjectInitialSharedVersion != nil {
		return *x.AuthenticatorObjectInitialSharedVersion
	}
	return 0
}

type ExecutionTimeObservations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of this ExecutionTimeObservations
	Version       *int32                      `protobuf:"varint,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Observations  []*ExecutionTimeObservation `protobuf:"bytes,2,rep,name=observations,proto3" json:"observations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionTimeObservations) Reset() {
	*x = ExecutionTimeObservations{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionTimeObservations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionTimeObservations) ProtoMessage() {}

func (x *ExecutionTimeObservations) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionTimeObservations.ProtoReflect.Descriptor instead.
func (*ExecutionTimeObservations) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{29}
}

func (x *ExecutionTimeObservations) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ExecutionTimeObservations) GetObservations() []*ExecutionTimeObservation {
	if x != nil {
		return x.Observations
	}
	return nil
}

type ExecutionTimeObservation struct {
	state                 protoimpl.MessageState                                 `protogen:"open.v1"`
	Kind                  *ExecutionTimeObservation_ExecutionTimeObservationKind `protobuf:"varint,1,opt,name=kind,proto3,enum=sui.rpc.v2beta.ExecutionTimeObservation_ExecutionTimeObservationKind,oneof" json:"kind,omitempty"`
	MoveEntryPoint        *MoveCall                                              `protobuf:"bytes,2,opt,name=move_entry_point,json=moveEntryPoint,proto3,oneof" json:"move_entry_point,omitempty"`
	ValidatorObservations []*ValidatorExecutionTimeObservation                   `protobuf:"bytes,3,rep,name=validator_observations,json=validatorObservations,proto3" json:"validator_observations,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ExecutionTimeObservation) Reset() {
	*x = ExecutionTimeObservation{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionTimeObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionTimeObservation) ProtoMessage() {}

func (x *ExecutionTimeObservation) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionTimeObservation.ProtoReflect.Descriptor instead.
func (*ExecutionTimeObservation) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{30}
}

func (x *ExecutionTimeObservation) GetKind() ExecutionTimeObservation_ExecutionTimeObservationKind {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ExecutionTimeObservation_EXECUTION_TIME_OBSERVATION_KIND_UNKNOWN
}

func (x *ExecutionTimeObservation) GetMoveEntryPoint() *MoveCall {
	if x != nil {
		return x.MoveEntryPoint
	}
	return nil
}

func (x *ExecutionTimeObservation) GetValidatorObservations() []*ValidatorExecutionTimeObservation {
	if x != nil {
		return x.ValidatorObservations
	}
	return nil
}

type ValidatorExecutionTimeObservation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Bls12381 public key of the validator
	Validator []byte `protobuf:"bytes,1,opt,name=validator,proto3,oneof" json:"validator,omitempty"`
	// Duration of an execution observation
	Duration      *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidatorExecutionTimeObservation) Reset() {
	*x = ValidatorExecutionTimeObservation{}
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidatorExecutionTimeObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorExecutionTimeObservation) ProtoMessage() {}

func (x *ValidatorExecutionTimeObservation) ProtoReflect() protoreflect.Message {
	mi := &file_sui_rpc_v2beta_transaction_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorExecutionTimeObservation.ProtoReflect.Descriptor instead.
func (*ValidatorExecutionTimeObservation) Descriptor() ([]byte, []int) {
	return file_sui_rpc_v2beta_transaction_proto_rawDescGZIP(), []int{31}
}

func (x *ValidatorExecutionTimeObservation) GetValidator() []byte {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *ValidatorExecutionTimeObservation) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

var File_sui_rpc_v2beta_transaction_proto protoreflect.FileDescriptor

const file_sui_rpc_v2beta_transaction_proto_rawDesc = "" +
	"\n" +
	" sui/rpc/v2beta/transaction.proto\x12\x0esui.rpc.v2beta\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dsui/rpc/v2beta/argument.proto\x1a\x18sui/rpc/v2beta/bcs.proto\x1a\x1asui/rpc/v2beta/input.proto\x1a\x1bsui/rpc/v2beta/object.proto\x1a%sui/rpc/v2beta/object_reference.proto\"\xac\x03\n" +
	"\vTransaction\x12*\n" +
	"\x03bcs\x18\x01 \x01(\v2\x13.sui.rpc.v2beta.BcsH\x00R\x03bcs\x88\x01\x01\x12\x1b\n" +
	"\x06digest\x18\x02 \x01(\tH\x01R\x06digest\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x03 \x01(\x05H\x02R\aversion\x88\x01\x01\x128\n" +
	"\x04kind\x18\x04 \x01(\v2\x1f.sui.rpc.v2beta.TransactionKindH\x03R\x04kind\x88\x01\x01\x12\x1b\n" +
	"\x06sender\x18\x05 \x01(\tH\x04R\x06sender\x88\x01\x01\x12@\n" +
	"\vgas_payment\x18\x06 \x01(\v2\x1a.sui.rpc.v2beta.GasPaymentH\x05R\n" +
	"gasPayment\x88\x01\x01\x12J\n" +
	"\n" +
	"expiration\x18\a \x01(\v2%.sui.rpc.v2beta.TransactionExpirationH\x06R\n" +
	"expiration\x88\x01\x01B\x06\n" +
	"\x04_bcsB\t\n" +
	"\a_digestB\n" +
	"\n" +
	"\b_versionB\a\n" +
	"\x05_kindB\t\n" +
	"\a_senderB\x0e\n" +
	"\f_gas_paymentB\r\n" +
	"\v_expiration\"\xb9\x01\n" +
	"\n" +
	"GasPayment\x129\n" +
	"\aobjects\x18\x01 \x03(\v2\x1f.sui.rpc.v2beta.ObjectReferenceR\aobjects\x12\x19\n" +
	"\x05owner\x18\x02 \x01(\tH\x00R\x05owner\x88\x01\x01\x12\x19\n" +
	"\x05price\x18\x03 \x01(\x04H\x01R\x05price\x88\x01\x01\x12\x1b\n" +
	"\x06budget\x18\x04 \x01(\x04H\x02R\x06budget\x88\x01\x01B\b\n" +
	"\x06_ownerB\b\n" +
	"\x06_priceB\t\n" +
	"\a_budget\"\xfa\x01\n" +
	"\x15TransactionExpiration\x12X\n" +
	"\x04kind\x18\x01 \x01(\x0e2?.sui.rpc.v2beta.TransactionExpiration.TransactionExpirationKindH\x00R\x04kind\x88\x01\x01\x12\x19\n" +
	"\x05epoch\x18\x02 \x01(\x04H\x01R\x05epoch\x88\x01\x01\"Y\n" +
	"\x19TransactionExpirationKind\x12'\n" +
	"#TRANSACTION_EXPIRATION_KIND_UNKNOWN\x10\x00\x12\b\n" +
	"\x04NONE\x10\x01\x12\t\n" +
	"\x05EPOCH\x10\x02B\a\n" +
	"\x05_kindB\b\n" +
	"\x06_epoch\"\xc7\a\n" +
	"\x0fTransactionKind\x12d\n" +
	"\x18programmable_transaction\x18\x02 \x01(\v2'.sui.rpc.v2beta.ProgrammableTransactionH\x00R\x17programmableTransaction\x12@\n" +
	"\fchange_epoch\x18d \x01(\v2\x1b.sui.rpc.v2beta.ChangeEpochH\x00R\vchangeEpoch\x12>\n" +
	"\agenesis\x18e \x01(\v2\".sui.rpc.v2beta.GenesisTransactionH\x00R\agenesis\x12j\n" +
	"\x1cconsensus_commit_prologue_v1\x18f \x01(\v2'.sui.rpc.v2beta.ConsensusCommitPrologueH\x00R\x19consensusCommitPrologueV1\x12h\n" +
	"\x1aauthenticator_state_update\x18g \x01(\v2(.sui.rpc.v2beta.AuthenticatorStateUpdateH\x00R\x18authenticatorStateUpdate\x12I\n" +
	"\fend_of_epoch\x18h \x01(\v2%.sui.rpc.v2beta.EndOfEpochTransactionH\x00R\n" +
	"endOfEpoch\x12_\n" +
	"\x17randomness_state_update\x18i \x01(\v2%.sui.rpc.v2beta.RandomnessStateUpdateH\x00R\x15randomnessStateUpdate\x12j\n" +
	"\x1cconsensus_commit_prologue_v2\x18j \x01(\v2'.sui.rpc.v2beta.ConsensusCommitPrologueH\x00R\x19consensusCommitPrologueV2\x12j\n" +
	"\x1cconsensus_commit_prologue_v3\x18k \x01(\v2'.sui.rpc.v2beta.ConsensusCommitPrologueH\x00R\x19consensusCommitPrologueV3\x12j\n" +
	"\x1cconsensus_commit_prologue_v4\x18l \x01(\v2'.sui.rpc.v2beta.ConsensusCommitPrologueH\x00R\x19consensusCommitPrologueV4B\x06\n" +
	"\x04kind\"}\n" +
	"\x17ProgrammableTransaction\x12-\n" +
	"\x06inputs\x18\x01 \x03(\v2\x15.sui.rpc.v2beta.InputR\x06inputs\x123\n" +
	"\bcommands\x18\x02 \x03(\v2\x17.sui.rpc.v2beta.CommandR\bcommands\"\xcf\x03\n" +
	"\aCommand\x127\n" +
	"\tmove_call\x18\x01 \x01(\v2\x18.sui.rpc.v2beta.MoveCallH\x00R\bmoveCall\x12L\n" +
	"\x10transfer_objects\x18\x02 \x01(\v2\x1f.sui.rpc.v2beta.TransferObjectsH\x00R\x0ftransferObjects\x12=\n" +
	"\vsplit_coins\x18\x03 \x01(\v2\x1a.sui.rpc.v2beta.SplitCoinsH\x00R\n" +
	"splitCoins\x12=\n" +
	"\vmerge_coins\x18\x04 \x01(\v2\x1a.sui.rpc.v2beta.MergeCoinsH\x00R\n" +
	"mergeCoins\x123\n" +
	"\apublish\x18\x05 \x01(\v2\x17.sui.rpc.v2beta.PublishH\x00R\apublish\x12J\n" +
	"\x10make_move_vector\x18\x06 \x01(\v2\x1e.sui.rpc.v2beta.MakeMoveVectorH\x00R\x0emakeMoveVector\x123\n" +
	"\aupgrade\x18\a \x01(\v2\x17.sui.rpc.v2beta.UpgradeH\x00R\aupgradeB\t\n" +
	"\acommand\"\xea\x01\n" +
	"\bMoveCall\x12\x1d\n" +
	"\apackage\x18\x01 \x01(\tH\x00R\apackage\x88\x01\x01\x12\x1b\n" +
	"\x06module\x18\x02 \x01(\tH\x01R\x06module\x88\x01\x01\x12\x1f\n" +
	"\bfunction\x18\x03 \x01(\tH\x02R\bfunction\x88\x01\x01\x12%\n" +
	"\x0etype_arguments\x18\x04 \x03(\tR\rtypeArguments\x126\n" +
	"\targuments\x18\x05 \x03(\v2\x18.sui.rpc.v2beta.ArgumentR\targumentsB\n" +
	"\n" +
	"\b_packageB\t\n" +
	"\a_moduleB\v\n" +
	"\t_function\"\x8a\x01\n" +
	"\x0fTransferObjects\x122\n" +
	"\aobjects\x18\x01 \x03(\v2\x18.sui.rpc.v2beta.ArgumentR\aobjects\x127\n" +
	"\aaddress\x18\x02 \x01(\v2\x18.sui.rpc.v2beta.ArgumentH\x00R\aaddress\x88\x01\x01B\n" +
	"\n" +
	"\b_address\"|\n" +
	"\n" +
	"SplitCoins\x121\n" +
	"\x04coin\x18\x01 \x01(\v2\x18.sui.rpc.v2beta.ArgumentH\x00R\x04coin\x88\x01\x01\x122\n" +
	"\aamounts\x18\x02 \x03(\v2\x18.sui.rpc.v2beta.ArgumentR\aamountsB\a\n" +
	"\x05_coin\"\x88\x01\n" +
	"\n" +
	"MergeCoins\x121\n" +
	"\x04coin\x18\x01 \x01(\v2\x18.sui.rpc.v2beta.ArgumentH\x00R\x04coin\x88\x01\x01\x12>\n" +
	"\x0ecoins_to_merge\x18\x02 \x03(\v2\x18.sui.rpc.v2beta.ArgumentR\fcoinsToMergeB\a\n" +
	"\x05_coin\"G\n" +
	"\aPublish\x12\x18\n" +
	"\amodules\x18\x01 \x03(\fR\amodules\x12\"\n" +
	"\fdependencies\x18\x02 \x03(\tR\fdependencies\"\x7f\n" +
	"\x0eMakeMoveVector\x12&\n" +
	"\felement_type\x18\x01 \x01(\tH\x00R\velementType\x88\x01\x01\x124\n" +
	"\belements\x18\x02 \x03(\v2\x18.sui.rpc.v2beta.ArgumentR\belementsB\x0f\n" +
	"\r_element_type\"\xb4\x01\n" +
	"\aUpgrade\x12\x18\n" +
	"\amodules\x18\x01 \x03(\fR\amodules\x12\"\n" +
	"\fdependencies\x18\x02 \x03(\tR\fdependencies\x12\x1d\n" +
	"\apackage\x18\x03 \x01(\tH\x00R\apackage\x88\x01\x01\x125\n" +
	"\x06ticket\x18\x04 \x01(\v2\x18.sui.rpc.v2beta.ArgumentH\x01R\x06ticket\x88\x01\x01B\n" +
	"\n" +
	"\b_packageB\t\n" +
	"\a_ticket\"\xc4\x02\n" +
	"\x15RandomnessStateUpdate\x12\x19\n" +
	"\x05epoch\x18\x01 \x01(\x04H\x00R\x05epoch\x88\x01\x01\x12.\n" +
	"\x10randomness_round\x18\x02 \x01(\x04H\x01R\x0frandomnessRound\x88\x01\x01\x12&\n" +
	"\frandom_bytes\x18\x03 \x01(\fH\x02R\vrandomBytes\x88\x01\x01\x12[\n" +
	"(randomness_object_initial_shared_version\x18\x04 \x01(\x04H\x03R$randomnessObjectInitialSharedVersion\x88\x01\x01B\b\n" +
	"\x06_epochB\x13\n" +
	"\x11_randomness_roundB\x0f\n" +
	"\r_random_bytesB+\n" +
	")_randomness_object_initial_shared_version\"\xd8\x04\n" +
	"\vChangeEpoch\x12\x19\n" +
	"\x05epoch\x18\x01 \x01(\x04H\x00R\x05epoch\x88\x01\x01\x12.\n" +
	"\x10protocol_version\x18\x02 \x01(\x04H\x01R\x0fprotocolVersion\x88\x01\x01\x12*\n" +
	"\x0estorage_charge\x18\x03 \x01(\x04H\x02R\rstorageCharge\x88\x01\x01\x122\n" +
	"\x12computation_charge\x18\x04 \x01(\x04H\x03R\x11computationCharge\x88\x01\x01\x12*\n" +
	"\x0estorage_rebate\x18\x05 \x01(\x04H\x04R\rstorageRebate\x88\x01\x01\x12@\n" +
	"\x1anon_refundable_storage_fee\x18\x06 \x01(\x04H\x05R\x17nonRefundableStorageFee\x88\x01\x01\x12S\n" +
	"\x15epoch_start_timestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x06R\x13epochStartTimestamp\x88\x01\x01\x12F\n" +
	"\x0fsystem_packages\x18\b \x03(\v2\x1d.sui.rpc.v2beta.SystemPackageR\x0esystemPackagesB\b\n" +
	"\x06_epochB\x13\n" +
	"\x11_protocol_versionB\x11\n" +
	"\x0f_storage_chargeB\x15\n" +
	"\x13_computation_chargeB\x11\n" +
	"\x0f_storage_rebateB\x1d\n" +
	"\x1b_non_refundable_storage_feeB\x18\n" +
	"\x16_epoch_start_timestamp\"x\n" +
	"\rSystemPackage\x12\x1d\n" +
	"\aversion\x18\x01 \x01(\x04H\x00R\aversion\x88\x01\x01\x12\x18\n" +
	"\amodules\x18\x02 \x03(\fR\amodules\x12\"\n" +
	"\fdependencies\x18\x03 \x03(\tR\fdependenciesB\n" +
	"\n" +
	"\b_version\"F\n" +
	"\x12GenesisTransaction\x120\n" +
	"\aobjects\x18\x01 \x03(\v2\x16.sui.rpc.v2beta.ObjectR\aobjects\"\xf4\x04\n" +
	"\x17ConsensusCommitPrologue\x12\x19\n" +
	"\x05epoch\x18\x01 \x01(\x04H\x00R\x05epoch\x88\x01\x01\x12\x19\n" +
	"\x05round\x18\x02 \x01(\x04H\x01R\x05round\x88\x01\x01\x12J\n" +
	"\x10commit_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\x0fcommitTimestamp\x88\x01\x01\x12;\n" +
	"\x17consensus_commit_digest\x18\x04 \x01(\tH\x03R\x15consensusCommitDigest\x88\x01\x01\x12'\n" +
	"\rsub_dag_index\x18\x05 \x01(\x04H\x04R\vsubDagIndex\x88\x01\x01\x12\x93\x01\n" +
	"(consensus_determined_version_assignments\x18\x06 \x01(\v25.sui.rpc.v2beta.ConsensusDeterminedVersionAssignmentsH\x05R%consensusDeterminedVersionAssignments\x88\x01\x01\x12;\n" +
	"\x17additional_state_digest\x18\a \x01(\tH\x06R\x15additionalStateDigest\x88\x01\x01B\b\n" +
	"\x06_epochB\b\n" +
	"\x06_roundB\x13\n" +
	"\x11_commit_timestampB\x1a\n" +
	"\x18_consensus_commit_digestB\x10\n" +
	"\x0e_sub_dag_indexB+\n" +
	")_consensus_determined_version_assignmentsB\x1a\n" +
	"\x18_additional_state_digest\"n\n" +
	"\x11VersionAssignment\x12 \n" +
	"\tobject_id\x18\x01 \x01(\tH\x00R\bobjectId\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x02 \x01(\x04H\x01R\aversion\x88\x01\x01B\f\n" +
	"\n" +
	"_object_idB\n" +
	"\n" +
	"\b_version\"\x91\x01\n" +
	"\x13CanceledTransaction\x12\x1b\n" +
	"\x06digest\x18\x01 \x01(\tH\x00R\x06digest\x88\x01\x01\x12R\n" +
	"\x13version_assignments\x18\x02 \x03(\v2!.sui.rpc.v2beta.VersionAssignmentR\x12versionAssignmentsB\t\n" +
	"\a_digest\"p\n" +
	"\x14CanceledTransactions\x12X\n" +
	"\x15canceled_transactions\x18\x01 \x03(\v2#.sui.rpc.v2beta.CanceledTransactionR\x14canceledTransactions\"\x8c\x01\n" +
	"%ConsensusDeterminedVersionAssignments\x12[\n" +
	"\x15canceled_transactions\x18\x02 \x01(\v2$.sui.rpc.v2beta.CanceledTransactionsH\x00R\x14canceledTransactionsB\x06\n" +
	"\x04kind\"\xba\x02\n" +
	"\x18AuthenticatorStateUpdate\x12\x19\n" +
	"\x05epoch\x18\x01 \x01(\x04H\x00R\x05epoch\x88\x01\x01\x12\x19\n" +
	"\x05round\x18\x02 \x01(\x04H\x01R\x05round\x88\x01\x01\x12A\n" +
	"\x0fnew_active_jwks\x18\x03 \x03(\v2\x19.sui.rpc.v2beta.ActiveJwkR\rnewActiveJwks\x12a\n" +
	"+authenticator_object_initial_shared_version\x18\x04 \x01(\x04H\x02R'authenticatorObjectInitialSharedVersion\x88\x01\x01B\b\n" +
	"\x06_epochB\b\n" +
	"\x06_roundB.\n" +
	",_authenticator_object_initial_shared_version\"\x97\x01\n" +
	"\tActiveJwk\x12*\n" +
	"\x02id\x18\x01 \x01(\v2\x15.sui.rpc.v2beta.JwkIdH\x00R\x02id\x88\x01\x01\x12*\n" +
	"\x03jwk\x18\x02 \x01(\v2\x13.sui.rpc.v2beta.JwkH\x01R\x03jwk\x88\x01\x01\x12\x19\n" +
	"\x05epoch\x18\x03 \x01(\x04H\x02R\x05epoch\x88\x01\x01B\x05\n" +
	"\x03_idB\x06\n" +
	"\x04_jwkB\b\n" +
	"\x06_epoch\"E\n" +
	"\x05JwkId\x12\x15\n" +
	"\x03iss\x18\x01 \x01(\tH\x00R\x03iss\x88\x01\x01\x12\x15\n" +
	"\x03kid\x18\x02 \x01(\tH\x01R\x03kid\x88\x01\x01B\x06\n" +
	"\x04_issB\x06\n" +
	"\x04_kid\"u\n" +
	"\x03Jwk\x12\x15\n" +
	"\x03kty\x18\x01 \x01(\tH\x00R\x03kty\x88\x01\x01\x12\x11\n" +
	"\x01e\x18\x02 \x01(\tH\x01R\x01e\x88\x01\x01\x12\x11\n" +
	"\x01n\x18\x03 \x01(\tH\x02R\x01n\x88\x01\x01\x12\x15\n" +
	"\x03alg\x18\x04 \x01(\tH\x03R\x03alg\x88\x01\x01B\x06\n" +
	"\x04_ktyB\x04\n" +
	"\x02_eB\x04\n" +
	"\x02_nB\x06\n" +
	"\x04_alg\"f\n" +
	"\x15EndOfEpochTransaction\x12M\n" +
	"\ftransactions\x18\x01 \x03(\v2).sui.rpc.v2beta.EndOfEpochTransactionKindR\ftransactions\"\xa2\x05\n" +
	"\x19EndOfEpochTransactionKind\x12@\n" +
	"\fchange_epoch\x18\x02 \x01(\v2\x1b.sui.rpc.v2beta.ChangeEpochH\x00R\vchangeEpoch\x12h\n" +
	"\x1aauthenticator_state_expire\x18\x03 \x01(\v2(.sui.rpc.v2beta.AuthenticatorStateExpireH\x00R\x18authenticatorStateExpire\x12k\n" +
	"\x1bexecution_time_observations\x18\x04 \x01(\v2).sui.rpc.v2beta.ExecutionTimeObservationsH\x00R\x19executionTimeObservations\x12W\n" +
	"\x1aauthenticator_state_create\x18\xc8\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x18authenticatorStateCreate\x12Q\n" +
	"\x17randomness_state_create\x18\xc9\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x15randomnessStateCreate\x12N\n" +
	"\x16deny_list_state_create\x18\xca\x01 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x13denyListStateCreate\x121\n" +
	"\x13bridge_state_create\x18\xcb\x01 \x01(\tH\x00R\x11bridgeStateCreate\x125\n" +
	"\x15bridge_committee_init\x18\xcc\x01 \x01(\x04H\x00R\x13bridgeCommitteeInitB\x06\n" +
	"\x04kind\"\xdd\x01\n" +
	"\x18AuthenticatorStateExpire\x12 \n" +
	"\tmin_epoch\x18\x01 \x01(\x04H\x00R\bminEpoch\x88\x01\x01\x12a\n" +
	"+authenticator_object_initial_shared_version\x18\x02 \x01(\x04H\x01R'authenticatorObjectInitialSharedVersion\x88\x01\x01B\f\n" +
	"\n" +
	"_min_epochB.\n" +
	",_authenticator_object_initial_shared_version\"\x94\x01\n" +
	"\x19ExecutionTimeObservations\x12\x1d\n" +
	"\aversion\x18\x01 \x01(\x05H\x00R\aversion\x88\x01\x01\x12L\n" +
	"\fobservations\x18\x02 \x03(\v2(.sui.rpc.v2beta.ExecutionTimeObservationR\fobservationsB\n" +
	"\n" +
	"\b_version\"\x97\x04\n" +
	"\x18ExecutionTimeObservation\x12^\n" +
	"\x04kind\x18\x01 \x01(\x0e2E.sui.rpc.v2beta.ExecutionTimeObservation.ExecutionTimeObservationKindH\x00R\x04kind\x88\x01\x01\x12G\n" +
	"\x10move_entry_point\x18\x02 \x01(\v2\x18.sui.rpc.v2beta.MoveCallH\x01R\x0emoveEntryPoint\x88\x01\x01\x12h\n" +
	"\x16validator_observations\x18\x03 \x03(\v21.sui.rpc.v2beta.ValidatorExecutionTimeObservationR\x15validatorObservations\"\xc9\x01\n" +
	"\x1cExecutionTimeObservationKind\x12+\n" +
	"'EXECUTION_TIME_OBSERVATION_KIND_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10MOVE_ENTRY_POINT\x10\x01\x12\x14\n" +
	"\x10TRANSFER_OBJECTS\x10\x02\x12\x0f\n" +
	"\vSPLIT_COINS\x10\x03\x12\x0f\n" +
	"\vMERGE_COINS\x10\x04\x12\v\n" +
	"\aPUBLISH\x10\x05\x12\x14\n" +
	"\x10MAKE_MOVE_VECTOR\x10\x06\x12\v\n" +
	"\aUPGRADE\x10\aB\a\n" +
	"\x05_kindB\x13\n" +
	"\x11_move_entry_point\"\x9d\x01\n" +
	"!ValidatorExecutionTimeObservation\x12!\n" +
	"\tvalidator\x18\x01 \x01(\fH\x00R\tvalidator\x88\x01\x01\x12:\n" +
	"\bduration\x18\x02 \x01(\v2\x19.google.protobuf.DurationH\x01R\bduration\x88\x01\x01B\f\n" +
	"\n" +
	"_validatorB\v\n" +
	"\t_durationB\x10Z\x0esui/rpc/v2betab\x06proto3"

var (
	file_sui_rpc_v2beta_transaction_proto_rawDescOnce sync.Once
	file_sui_rpc_v2beta_transaction_proto_rawDescData []byte
)

func file_sui_rpc_v2beta_transaction_proto_rawDescGZIP() []byte {
	file_sui_rpc_v2beta_transaction_proto_rawDescOnce.Do(func() {
		file_sui_rpc_v2beta_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sui_rpc_v2beta_transaction_proto_rawDesc), len(file_sui_rpc_v2beta_transaction_proto_rawDesc)))
	})
	return file_sui_rpc_v2beta_transaction_proto_rawDescData
}

var file_sui_rpc_v2beta_transaction_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sui_rpc_v2beta_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_sui_rpc_v2beta_transaction_proto_goTypes = []any{
	(TransactionExpiration_TransactionExpirationKind)(0),       // 0: sui.rpc.v2beta.TransactionExpiration.TransactionExpirationKind
	(ExecutionTimeObservation_ExecutionTimeObservationKind)(0), // 1: sui.rpc.v2beta.ExecutionTimeObservation.ExecutionTimeObservationKind
	(*Transaction)(nil),                           // 2: sui.rpc.v2beta.Transaction
	(*GasPayment)(nil),                            // 3: sui.rpc.v2beta.GasPayment
	(*TransactionExpiration)(nil),                 // 4: sui.rpc.v2beta.TransactionExpiration
	(*TransactionKind)(nil),                       // 5: sui.rpc.v2beta.TransactionKind
	(*ProgrammableTransaction)(nil),               // 6: sui.rpc.v2beta.ProgrammableTransaction
	(*Command)(nil),                               // 7: sui.rpc.v2beta.Command
	(*MoveCall)(nil),                              // 8: sui.rpc.v2beta.MoveCall
	(*TransferObjects)(nil),                       // 9: sui.rpc.v2beta.TransferObjects
	(*SplitCoins)(nil),                            // 10: sui.rpc.v2beta.SplitCoins
	(*MergeCoins)(nil),                            // 11: sui.rpc.v2beta.MergeCoins
	(*Publish)(nil),                               // 12: sui.rpc.v2beta.Publish
	(*MakeMoveVector)(nil),                        // 13: sui.rpc.v2beta.MakeMoveVector
	(*Upgrade)(nil),                               // 14: sui.rpc.v2beta.Upgrade
	(*RandomnessStateUpdate)(nil),                 // 15: sui.rpc.v2beta.RandomnessStateUpdate
	(*ChangeEpoch)(nil),                           // 16: sui.rpc.v2beta.ChangeEpoch
	(*SystemPackage)(nil),                         // 17: sui.rpc.v2beta.SystemPackage
	(*GenesisTransaction)(nil),                    // 18: sui.rpc.v2beta.GenesisTransaction
	(*ConsensusCommitPrologue)(nil),               // 19: sui.rpc.v2beta.ConsensusCommitPrologue
	(*VersionAssignment)(nil),                     // 20: sui.rpc.v2beta.VersionAssignment
	(*CanceledTransaction)(nil),                   // 21: sui.rpc.v2beta.CanceledTransaction
	(*CanceledTransactions)(nil),                  // 22: sui.rpc.v2beta.CanceledTransactions
	(*ConsensusDeterminedVersionAssignments)(nil), // 23: sui.rpc.v2beta.ConsensusDeterminedVersionAssignments
	(*AuthenticatorStateUpdate)(nil),              // 24: sui.rpc.v2beta.AuthenticatorStateUpdate
	(*ActiveJwk)(nil),                             // 25: sui.rpc.v2beta.ActiveJwk
	(*JwkId)(nil),                                 // 26: sui.rpc.v2beta.JwkId
	(*Jwk)(nil),                                   // 27: sui.rpc.v2beta.Jwk
	(*EndOfEpochTransaction)(nil),                 // 28: sui.rpc.v2beta.EndOfEpochTransaction
	(*EndOfEpochTransactionKind)(nil),             // 29: sui.rpc.v2beta.EndOfEpochTransactionKind
	(*AuthenticatorStateExpire)(nil),              // 30: sui.rpc.v2beta.AuthenticatorStateExpire
	(*ExecutionTimeObservations)(nil),             // 31: sui.rpc.v2beta.ExecutionTimeObservations
	(*ExecutionTimeObservation)(nil),              // 32: sui.rpc.v2beta.ExecutionTimeObservation
	(*ValidatorExecutionTimeObservation)(nil),     // 33: sui.rpc.v2beta.ValidatorExecutionTimeObservation
	(*Bcs)(nil),                                   // 34: sui.rpc.v2beta.Bcs
	(*ObjectReference)(nil),                       // 35: sui.rpc.v2beta.ObjectReference
	(*Input)(nil),                                 // 36: sui.rpc.v2beta.Input
	(*Argument)(nil),                              // 37: sui.rpc.v2beta.Argument
	(*timestamp.Timestamp)(nil),                   // 38: google.protobuf.Timestamp
	(*Object)(nil),                                // 39: sui.rpc.v2beta.Object
	(*emptypb.Empty)(nil),                         // 40: google.protobuf.Empty
	(*durationpb.Duration)(nil),                   // 41: google.protobuf.Duration
}
var file_sui_rpc_v2beta_transaction_proto_depIdxs = []int32{
	34, // 0: sui.rpc.v2beta.Transaction.bcs:type_name -> sui.rpc.v2beta.Bcs
	5,  // 1: sui.rpc.v2beta.Transaction.kind:type_name -> sui.rpc.v2beta.TransactionKind
	3,  // 2: sui.rpc.v2beta.Transaction.gas_payment:type_name -> sui.rpc.v2beta.GasPayment
	4,  // 3: sui.rpc.v2beta.Transaction.expiration:type_name -> sui.rpc.v2beta.TransactionExpiration
	35, // 4: sui.rpc.v2beta.GasPayment.objects:type_name -> sui.rpc.v2beta.ObjectReference
	0,  // 5: sui.rpc.v2beta.TransactionExpiration.kind:type_name -> sui.rpc.v2beta.TransactionExpiration.TransactionExpirationKind
	6,  // 6: sui.rpc.v2beta.TransactionKind.programmable_transaction:type_name -> sui.rpc.v2beta.ProgrammableTransaction
	16, // 7: sui.rpc.v2beta.TransactionKind.change_epoch:type_name -> sui.rpc.v2beta.ChangeEpoch
	18, // 8: sui.rpc.v2beta.TransactionKind.genesis:type_name -> sui.rpc.v2beta.GenesisTransaction
	19, // 9: sui.rpc.v2beta.TransactionKind.consensus_commit_prologue_v1:type_name -> sui.rpc.v2beta.ConsensusCommitPrologue
	24, // 10: sui.rpc.v2beta.TransactionKind.authenticator_state_update:type_name -> sui.rpc.v2beta.AuthenticatorStateUpdate
	28, // 11: sui.rpc.v2beta.TransactionKind.end_of_epoch:type_name -> sui.rpc.v2beta.EndOfEpochTransaction
	15, // 12: sui.rpc.v2beta.TransactionKind.randomness_state_update:type_name -> sui.rpc.v2beta.RandomnessStateUpdate
	19, // 13: sui.rpc.v2beta.TransactionKind.consensus_commit_prologue_v2:type_name -> sui.rpc.v2beta.ConsensusCommitPrologue
	19, // 14: sui.rpc.v2beta.TransactionKind.consensus_commit_prologue_v3:type_name -> sui.rpc.v2beta.ConsensusCommitPrologue
	19, // 15: sui.rpc.v2beta.TransactionKind.consensus_commit_prologue_v4:type_name -> sui.rpc.v2beta.ConsensusCommitPrologue
	36, // 16: sui.rpc.v2beta.ProgrammableTransaction.inputs:type_name -> sui.rpc.v2beta.Input
	7,  // 17: sui.rpc.v2beta.ProgrammableTransaction.commands:type_name -> sui.rpc.v2beta.Command
	8,  // 18: sui.rpc.v2beta.Command.move_call:type_name -> sui.rpc.v2beta.MoveCall
	9,  // 19: sui.rpc.v2beta.Command.transfer_objects:type_name -> sui.rpc.v2beta.TransferObjects
	10, // 20: sui.rpc.v2beta.Command.split_coins:type_name -> sui.rpc.v2beta.SplitCoins
	11, // 21: sui.rpc.v2beta.Command.merge_coins:type_name -> sui.rpc.v2beta.MergeCoins
	12, // 22: sui.rpc.v2beta.Command.publish:type_name -> sui.rpc.v2beta.Publish
	13, // 23: sui.rpc.v2beta.Command.make_move_vector:type_name -> sui.rpc.v2beta.MakeMoveVector
	14, // 24: sui.rpc.v2beta.Command.upgrade:type_name -> sui.rpc.v2beta.Upgrade
	37, // 25: sui.rpc.v2beta.MoveCall.arguments:type_name -> sui.rpc.v2beta.Argument
	37, // 26: sui.rpc.v2beta.TransferObjects.objects:type_name -> sui.rpc.v2beta.Argument
	37, // 27: sui.rpc.v2beta.TransferObjects.address:type_name -> sui.rpc.v2beta.Argument
	37, // 28: sui.rpc.v2beta.SplitCoins.coin:type_name -> sui.rpc.v2beta.Argument
	37, // 29: sui.rpc.v2beta.SplitCoins.amounts:type_name -> sui.rpc.v2beta.Argument
	37, // 30: sui.rpc.v2beta.MergeCoins.coin:type_name -> sui.rpc.v2beta.Argument
	37, // 31: sui.rpc.v2beta.MergeCoins.coins_to_merge:type_name -> sui.rpc.v2beta.Argument
	37, // 32: sui.rpc.v2beta.MakeMoveVector.elements:type_name -> sui.rpc.v2beta.Argument
	37, // 33: sui.rpc.v2beta.Upgrade.ticket:type_name -> sui.rpc.v2beta.Argument
	38, // 34: sui.rpc.v2beta.ChangeEpoch.epoch_start_timestamp:type_name -> google.protobuf.Timestamp
	17, // 35: sui.rpc.v2beta.ChangeEpoch.system_packages:type_name -> sui.rpc.v2beta.SystemPackage
	39, // 36: sui.rpc.v2beta.GenesisTransaction.objects:type_name -> sui.rpc.v2beta.Object
	38, // 37: sui.rpc.v2beta.ConsensusCommitPrologue.commit_timestamp:type_name -> google.protobuf.Timestamp
	23, // 38: sui.rpc.v2beta.ConsensusCommitPrologue.consensus_determined_version_assignments:type_name -> sui.rpc.v2beta.ConsensusDeterminedVersionAssignments
	20, // 39: sui.rpc.v2beta.CanceledTransaction.version_assignments:type_name -> sui.rpc.v2beta.VersionAssignment
	21, // 40: sui.rpc.v2beta.CanceledTransactions.canceled_transactions:type_name -> sui.rpc.v2beta.CanceledTransaction
	22, // 41: sui.rpc.v2beta.ConsensusDeterminedVersionAssignments.canceled_transactions:type_name -> sui.rpc.v2beta.CanceledTransactions
	25, // 42: sui.rpc.v2beta.AuthenticatorStateUpdate.new_active_jwks:type_name -> sui.rpc.v2beta.ActiveJwk
	26, // 43: sui.rpc.v2beta.ActiveJwk.id:type_name -> sui.rpc.v2beta.JwkId
	27, // 44: sui.rpc.v2beta.ActiveJwk.jwk:type_name -> sui.rpc.v2beta.Jwk
	29, // 45: sui.rpc.v2beta.EndOfEpochTransaction.transactions:type_name -> sui.rpc.v2beta.EndOfEpochTransactionKind
	16, // 46: sui.rpc.v2beta.EndOfEpochTransactionKind.change_epoch:type_name -> sui.rpc.v2beta.ChangeEpoch
	30, // 47: sui.rpc.v2beta.EndOfEpochTransactionKind.authenticator_state_expire:type_name -> sui.rpc.v2beta.AuthenticatorStateExpire
	31, // 48: sui.rpc.v2beta.EndOfEpochTransactionKind.execution_time_observations:type_name -> sui.rpc.v2beta.ExecutionTimeObservations
	40, // 49: sui.rpc.v2beta.EndOfEpochTransactionKind.authenticator_state_create:type_name -> google.protobuf.Empty
	40, // 50: sui.rpc.v2beta.EndOfEpochTransactionKind.randomness_state_create:type_name -> google.protobuf.Empty
	40, // 51: sui.rpc.v2beta.EndOfEpochTransactionKind.deny_list_state_create:type_name -> google.protobuf.Empty
	32, // 52: sui.rpc.v2beta.ExecutionTimeObservations.observations:type_name -> sui.rpc.v2beta.ExecutionTimeObservation
	1,  // 53: sui.rpc.v2beta.ExecutionTimeObservation.kind:type_name -> sui.rpc.v2beta.ExecutionTimeObservation.ExecutionTimeObservationKind
	8,  // 54: sui.rpc.v2beta.ExecutionTimeObservation.move_entry_point:type_name -> sui.rpc.v2beta.MoveCall
	33, // 55: sui.rpc.v2beta.ExecutionTimeObservation.validator_observations:type_name -> sui.rpc.v2beta.ValidatorExecutionTimeObservation
	41, // 56: sui.rpc.v2beta.ValidatorExecutionTimeObservation.duration:type_name -> google.protobuf.Duration
	57, // [57:57] is the sub-list for method output_type
	57, // [57:57] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_sui_rpc_v2beta_transaction_proto_init() }
func file_sui_rpc_v2beta_transaction_proto_init() {
	if File_sui_rpc_v2beta_transaction_proto != nil {
		return
	}
	file_sui_rpc_v2beta_argument_proto_init()
	file_sui_rpc_v2beta_bcs_proto_init()
	file_sui_rpc_v2beta_input_proto_init()
	file_sui_rpc_v2beta_object_proto_init()
	file_sui_rpc_v2beta_object_reference_proto_init()
	file_sui_rpc_v2beta_transaction_proto_msgTypes[0].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[1].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[2].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[3].OneofWrappers = []any{
		(*TransactionKind_ProgrammableTransaction)(nil),
		(*TransactionKind_ChangeEpoch)(nil),
		(*TransactionKind_Genesis)(nil),
		(*TransactionKind_ConsensusCommitPrologueV1)(nil),
		(*TransactionKind_AuthenticatorStateUpdate)(nil),
		(*TransactionKind_EndOfEpoch)(nil),
		(*TransactionKind_RandomnessStateUpdate)(nil),
		(*TransactionKind_ConsensusCommitPrologueV2)(nil),
		(*TransactionKind_ConsensusCommitPrologueV3)(nil),
		(*TransactionKind_ConsensusCommitPrologueV4)(nil),
	}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[5].OneofWrappers = []any{
		(*Command_MoveCall)(nil),
		(*Command_TransferObjects)(nil),
		(*Command_SplitCoins)(nil),
		(*Command_MergeCoins)(nil),
		(*Command_Publish)(nil),
		(*Command_MakeMoveVector)(nil),
		(*Command_Upgrade)(nil),
	}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[6].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[7].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[8].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[9].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[11].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[12].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[13].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[14].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[15].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[17].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[18].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[19].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[21].OneofWrappers = []any{
		(*ConsensusDeterminedVersionAssignments_CanceledTransactions)(nil),
	}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[22].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[23].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[24].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[25].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[27].OneofWrappers = []any{
		(*EndOfEpochTransactionKind_ChangeEpoch)(nil),
		(*EndOfEpochTransactionKind_AuthenticatorStateExpire)(nil),
		(*EndOfEpochTransactionKind_ExecutionTimeObservations)(nil),
		(*EndOfEpochTransactionKind_AuthenticatorStateCreate)(nil),
		(*EndOfEpochTransactionKind_RandomnessStateCreate)(nil),
		(*EndOfEpochTransactionKind_DenyListStateCreate)(nil),
		(*EndOfEpochTransactionKind_BridgeStateCreate)(nil),
		(*EndOfEpochTransactionKind_BridgeCommitteeInit)(nil),
	}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[28].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[29].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[30].OneofWrappers = []any{}
	file_sui_rpc_v2beta_transaction_proto_msgTypes[31].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sui_rpc_v2beta_transaction_proto_rawDesc), len(file_sui_rpc_v2beta_transaction_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sui_rpc_v2beta_transaction_proto_goTypes,
		DependencyIndexes: file_sui_rpc_v2beta_transaction_proto_depIdxs,
		EnumInfos:         file_sui_rpc_v2beta_transaction_proto_enumTypes,
		MessageInfos:      file_sui_rpc_v2beta_transaction_proto_msgTypes,
	}.Build()
	File_sui_rpc_v2beta_transaction_proto = out.File
	file_sui_rpc_v2beta_transaction_proto_goTypes = nil
	file_sui_rpc_v2beta_transaction_proto_depIdxs = nil
}
